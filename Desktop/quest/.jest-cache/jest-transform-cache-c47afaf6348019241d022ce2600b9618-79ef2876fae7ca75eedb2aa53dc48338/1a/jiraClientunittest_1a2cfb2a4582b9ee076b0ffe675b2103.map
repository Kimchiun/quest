{"file":"/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/tests/jiraClient.unit.test.ts","mappings":";;;;;AAGA,aAAa;AACb,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAJnB,kDAA0B;AAC1B,uFAAyF;AAIzF,MAAM,WAAW,GAAG,eAAkC,CAAC;AAEvD,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IACjC,MAAM,QAAQ,GAAG,mBAAmB,CAAC;IACrC,MAAM,QAAQ,GAAG,mBAAmB,CAAC;IACrC,MAAM,WAAW,GAAG;QAClB,OAAO,EAAE,aAAa;QACtB,WAAW,EAAE,MAAM;QACnB,UAAU,EAAE,MAAM;QAClB,OAAO,EAAE,QAAQ;QACjB,QAAQ,EAAE,MAAM;QAChB,QAAQ,EAAE,OAAO;KAClB,CAAC;IAEF,UAAU,CAAC,GAAG,EAAE;QACd,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;QAC1C,WAAW,CAAC,IAAI,CAAC,qBAAqB,CAAC;YACrC,MAAM,EAAE,GAAG;YACX,IAAI,EAAE,EAAE,GAAG,EAAE,UAAU,EAAE;SAC1B,CAAC,CAAC;QAEH,MAAM,MAAM,GAAG,MAAM,IAAA,4BAAe,EAAC,WAAW,CAAC,CAAC;QAClD,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACpC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE,KAAK,IAAI,EAAE;QAC5C,WAAW,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAErE,MAAM,MAAM,CAAC,IAAA,4BAAe,EAAC,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IAChF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAC9C,WAAW,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QAE7D,MAAM,MAAM,CAAC,IAAA,4BAAe,EAAC,EAAE,GAAG,WAAW,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC/F,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/tests/jiraClient.unit.test.ts"],"sourcesContent":["import axios from 'axios';\nimport { createJiraIssue } from '../src/main/app/infrastructure/integrations/jiraClient';\n\n// Mock axios\njest.mock('axios');\nconst mockedAxios = axios as jest.Mocked<typeof axios>;\n\ndescribe('jiraClient (unit)', () => {\n  const JIRA_URL = 'http://jira.local';\n  const API_PATH = '/rest/api/2/issue';\n  const BASE_PARAMS = {\n    summary: 'Bug summary',\n    description: 'desc',\n    projectKey: 'TEST',\n    jiraUrl: JIRA_URL,\n    username: 'user',\n    apiToken: 'token',\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('should create a Jira issue', async () => {\n    mockedAxios.post.mockResolvedValueOnce({ \n      status: 201, \n      data: { key: 'TEST-123' } \n    });\n    \n    const result = await createJiraIssue(BASE_PARAMS);\n    expect(result.key).toBe('TEST-123');\n    expect(result.url).toContain('TEST-123');\n  });\n\n  it('should handle Jira API error', async () => {\n    mockedAxios.post.mockRejectedValueOnce(new Error('Invalid project'));\n    \n    await expect(createJiraIssue(BASE_PARAMS)).rejects.toThrow(/Invalid project/);\n  });\n\n  it('should handle Jira API timeout', async () => {\n    mockedAxios.post.mockRejectedValueOnce(new Error('timeout'));\n    \n    await expect(createJiraIssue({ ...BASE_PARAMS, timeoutMs: 100 })).rejects.toThrow(/timeout/);\n  });\n}); "],"version":3}