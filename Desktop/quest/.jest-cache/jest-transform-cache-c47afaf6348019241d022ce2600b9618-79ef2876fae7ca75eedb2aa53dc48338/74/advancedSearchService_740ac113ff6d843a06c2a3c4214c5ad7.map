{"file":"/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/src/main/app/domains/testcases/elasticsearch/advancedSearchService.ts","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/src/main/app/domains/testcases/elasticsearch/advancedSearchService.ts"],"sourcesContent":["import esClient from '../../../infrastructure/elasticsearch/esClient';\nimport { TestCase } from '../models/TestCase';\n\nconst INDEX = 'testcases';\n\nexport interface AdvancedSearchFilter {\n  folders?: string[];\n  tags?: string[];\n  status?: ('Active' | 'Archived')[];\n  createdBy?: string[];\n  priority?: ('High' | 'Medium' | 'Low')[];\n  dateRange?: {\n    from: string;\n    to: string;\n  };\n  keyword?: string;\n}\n\nexport interface SearchPreset {\n  id: string;\n  name: string;\n  filters: AdvancedSearchFilter;\n  createdBy: string;\n  createdAt: string;\n}\n\nexport interface SearchResult {\n  testCases: TestCase[];\n  total: number;\n  highlights: Record<string, string[]>;\n}\n\n/**\n * 복합 조건을 Elasticsearch 쿼리로 변환\n */\nexport function buildAdvancedQuery(filters: AdvancedSearchFilter, page: number = 0, size: number = 20) {\n  const must: any[] = [];\n  const should: any[] = [];\n  const filter: any[] = [];\n\n  // 키워드 검색 (제목, 설명, 스텝에서 검색)\n  if (filters.keyword) {\n    should.push(\n      { match: { title: { query: filters.keyword, boost: 3 } } },\n      { match: { prereq: { query: filters.keyword, boost: 2 } } },\n      { match: { steps: { query: filters.keyword, boost: 1 } } },\n      { match: { expected: { query: filters.keyword, boost: 1 } } }\n    );\n  }\n\n  // 폴더 필터\n  if (filters.folders && filters.folders.length > 0) {\n    filter.push({ terms: { folder: filters.folders } });\n  }\n\n  // 태그 필터\n  if (filters.tags && filters.tags.length > 0) {\n    filter.push({ terms: { tags: filters.tags } });\n  }\n\n  // 상태 필터\n  if (filters.status && filters.status.length > 0) {\n    filter.push({ terms: { status: filters.status } });\n  }\n\n  // 작성자 필터\n  if (filters.createdBy && filters.createdBy.length > 0) {\n    filter.push({ terms: { createdBy: filters.createdBy } });\n  }\n\n  // 우선순위 필터\n  if (filters.priority && filters.priority.length > 0) {\n    filter.push({ terms: { priority: filters.priority } });\n  }\n\n  // 날짜 범위 필터\n  if (filters.dateRange) {\n    const range: any = {};\n    if (filters.dateRange.from) range.gte = filters.dateRange.from;\n    if (filters.dateRange.to) range.lte = filters.dateRange.to;\n    if (Object.keys(range).length > 0) {\n      filter.push({ range: { createdAt: range } });\n    }\n  }\n\n  const query: any = {\n    bool: {\n      must,\n      should,\n      filter,\n      minimum_should_match: filters.keyword ? 1 : 0\n    }\n  };\n\n  return {\n    query,\n    highlight: {\n      fields: {\n        title: {},\n        prereq: {},\n        steps: {},\n        expected: {}\n      },\n      pre_tags: ['<mark>'],\n      post_tags: ['</mark>']\n    },\n    from: page * size,\n    size,\n    sort: [\n      '_score:desc',\n      'createdAt:desc'\n    ]\n  };\n}\n\n/**\n * 고급 검색 실행\n */\nexport async function advancedSearch(\n  filters: AdvancedSearchFilter,\n  page: number = 0,\n  size: number = 20\n): Promise<SearchResult> {\n  const query = buildAdvancedQuery(filters, page, size);\n  \n  const result = await esClient.search({\n    index: INDEX,\n    ...query\n  });\n\n  const testCases = result.hits.hits.map((hit: any) => hit._source as TestCase);\n  const highlights: Record<string, string[]> = {};\n  \n  result.hits.hits.forEach((hit: any) => {\n    if (hit.highlight) {\n      highlights[hit._id] = Object.values(hit.highlight).flat() as string[];\n    }\n  });\n\n  return {\n    testCases,\n    total: typeof result.hits.total === 'number' ? result.hits.total : result.hits.total?.value || 0,\n    highlights\n  };\n}\n\n/**\n * 검색 프리셋 저장\n */\nexport async function saveSearchPreset(preset: Omit<SearchPreset, 'id' | 'createdAt'>): Promise<SearchPreset> {\n  const id = `preset_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  const newPreset: SearchPreset = {\n    ...preset,\n    id,\n    createdAt: new Date().toISOString()\n  };\n\n  await esClient.index({\n    index: 'search_presets',\n    id,\n    document: newPreset\n  });\n\n  return newPreset;\n}\n\n/**\n * 검색 프리셋 목록 조회\n */\nexport async function getSearchPresets(createdBy?: string): Promise<SearchPreset[]> {\n  const query: any = {\n    query: {\n      match_all: {}\n    },\n    sort: [{ createdAt: { order: 'desc' } }]\n  };\n\n  if (createdBy) {\n    query.query = { term: { createdBy } };\n  }\n\n  const result = await esClient.search({\n    index: 'search_presets',\n    ...query\n  });\n\n  return result.hits.hits.map((hit: any) => hit._source as SearchPreset);\n}\n\n/**\n * 검색 프리셋 삭제\n */\nexport async function deleteSearchPreset(id: string): Promise<boolean> {\n  try {\n    await esClient.delete({\n      index: 'search_presets',\n      id\n    });\n    return true;\n  } catch (error) {\n    console.error('Failed to delete search preset:', error);\n    return false;\n  }\n} "],"version":3}