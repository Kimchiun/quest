4326d4e712584d528ba637373d7f5f38
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildAdvancedQuery = buildAdvancedQuery;
exports.advancedSearch = advancedSearch;
exports.saveSearchPreset = saveSearchPreset;
exports.getSearchPresets = getSearchPresets;
exports.deleteSearchPreset = deleteSearchPreset;
const esClient_1 = __importDefault(require("../../../infrastructure/elasticsearch/esClient"));
const INDEX = 'testcases';
/**
 * 복합 조건을 Elasticsearch 쿼리로 변환
 */
function buildAdvancedQuery(filters, page = 0, size = 20) {
    const must = [];
    const should = [];
    const filter = [];
    // 키워드 검색 (제목, 설명, 스텝에서 검색)
    if (filters.keyword) {
        should.push({ match: { title: { query: filters.keyword, boost: 3 } } }, { match: { prereq: { query: filters.keyword, boost: 2 } } }, { match: { steps: { query: filters.keyword, boost: 1 } } }, { match: { expected: { query: filters.keyword, boost: 1 } } });
    }
    // 폴더 필터
    if (filters.folders && filters.folders.length > 0) {
        filter.push({ terms: { folder: filters.folders } });
    }
    // 태그 필터
    if (filters.tags && filters.tags.length > 0) {
        filter.push({ terms: { tags: filters.tags } });
    }
    // 상태 필터
    if (filters.status && filters.status.length > 0) {
        filter.push({ terms: { status: filters.status } });
    }
    // 작성자 필터
    if (filters.createdBy && filters.createdBy.length > 0) {
        filter.push({ terms: { createdBy: filters.createdBy } });
    }
    // 우선순위 필터
    if (filters.priority && filters.priority.length > 0) {
        filter.push({ terms: { priority: filters.priority } });
    }
    // 날짜 범위 필터
    if (filters.dateRange) {
        const range = {};
        if (filters.dateRange.from)
            range.gte = filters.dateRange.from;
        if (filters.dateRange.to)
            range.lte = filters.dateRange.to;
        if (Object.keys(range).length > 0) {
            filter.push({ range: { createdAt: range } });
        }
    }
    const query = {
        bool: {
            must,
            should,
            filter,
            minimum_should_match: filters.keyword ? 1 : 0
        }
    };
    return {
        query,
        highlight: {
            fields: {
                title: {},
                prereq: {},
                steps: {},
                expected: {}
            },
            pre_tags: ['<mark>'],
            post_tags: ['</mark>']
        },
        from: page * size,
        size,
        sort: [
            '_score:desc',
            'createdAt:desc'
        ]
    };
}
/**
 * 고급 검색 실행
 */
async function advancedSearch(filters, page = 0, size = 20) {
    const query = buildAdvancedQuery(filters, page, size);
    const result = await esClient_1.default.search({
        index: INDEX,
        ...query
    });
    const testCases = result.hits.hits.map((hit) => hit._source);
    const highlights = {};
    result.hits.hits.forEach((hit) => {
        if (hit.highlight) {
            highlights[hit._id] = Object.values(hit.highlight).flat();
        }
    });
    return {
        testCases,
        total: typeof result.hits.total === 'number' ? result.hits.total : result.hits.total?.value || 0,
        highlights
    };
}
/**
 * 검색 프리셋 저장
 */
async function saveSearchPreset(preset) {
    const id = `preset_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
    const newPreset = {
        ...preset,
        id,
        createdAt: new Date().toISOString()
    };
    await esClient_1.default.index({
        index: 'search_presets',
        id,
        document: newPreset
    });
    return newPreset;
}
/**
 * 검색 프리셋 목록 조회
 */
async function getSearchPresets(createdBy) {
    const query = {
        query: {
            match_all: {}
        },
        sort: [{ createdAt: { order: 'desc' } }]
    };
    if (createdBy) {
        query.query = { term: { createdBy } };
    }
    const result = await esClient_1.default.search({
        index: 'search_presets',
        ...query
    });
    return result.hits.hits.map((hit) => hit._source);
}
/**
 * 검색 프리셋 삭제
 */
async function deleteSearchPreset(id) {
    try {
        await esClient_1.default.delete({
            index: 'search_presets',
            id
        });
        return true;
    }
    catch (error) {
        console.error('Failed to delete search preset:', error);
        return false;
    }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,