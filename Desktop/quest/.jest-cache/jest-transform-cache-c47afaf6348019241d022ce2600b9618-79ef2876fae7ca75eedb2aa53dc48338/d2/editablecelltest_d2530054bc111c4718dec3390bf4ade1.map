{"file":"/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/tests/editable-cell.test.tsx","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/tests/editable-cell.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport EditableCell from '../src/renderer/shared/components/EditableCell';\n\ndescribe('EditableCell', () => {\n  const mockOnSave = jest.fn();\n  const mockOnCancel = jest.fn();\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('텍스트 타입', () => {\n    it('기본값을 표시한다', () => {\n      render(\n        <EditableCell\n          value=\"테스트 제목\"\n          type=\"text\"\n          onSave={mockOnSave}\n        />\n      );\n\n      expect(screen.getByText('테스트 제목')).toBeInTheDocument();\n    });\n\n    it('클릭 시 편집 모드로 진입한다', () => {\n      render(\n        <EditableCell\n          value=\"테스트 제목\"\n          type=\"text\"\n          onSave={mockOnSave}\n        />\n      );\n\n      const displayElement = screen.getByText('테스트 제목');\n      fireEvent.click(displayElement);\n\n      expect(screen.getByDisplayValue('테스트 제목')).toBeInTheDocument();\n    });\n\n    it('Enter 키로 저장한다', async () => {\n      render(\n        <EditableCell\n          value=\"테스트 제목\"\n          type=\"text\"\n          onSave={mockOnSave}\n        />\n      );\n\n      const displayElement = screen.getByText('테스트 제목');\n      fireEvent.click(displayElement);\n\n      const input = screen.getByDisplayValue('테스트 제목');\n      fireEvent.change(input, { target: { value: '새 제목' } });\n      fireEvent.keyDown(input, { key: 'Enter' });\n\n      await waitFor(() => {\n        expect(mockOnSave).toHaveBeenCalledWith('새 제목');\n      });\n    });\n\n    it('Escape 키로 취소한다', () => {\n      render(\n        <EditableCell\n          value=\"테스트 제목\"\n          type=\"text\"\n          onSave={mockOnSave}\n          onCancel={mockOnCancel}\n        />\n      );\n\n      const displayElement = screen.getByText('테스트 제목');\n      fireEvent.click(displayElement);\n\n      const input = screen.getByDisplayValue('테스트 제목');\n      fireEvent.change(input, { target: { value: '새 제목' } });\n      fireEvent.keyDown(input, { key: 'Escape' });\n\n      expect(mockOnCancel).toHaveBeenCalled();\n      expect(screen.getByText('테스트 제목')).toBeInTheDocument();\n    });\n\n    it('자동저장을 500ms debounce로 실행한다', async () => {\n      jest.useFakeTimers();\n\n      render(\n        <EditableCell\n          value=\"테스트 제목\"\n          type=\"text\"\n          onSave={mockOnSave}\n        />\n      );\n\n      const displayElement = screen.getByText('테스트 제목');\n      fireEvent.click(displayElement);\n\n      const input = screen.getByDisplayValue('테스트 제목');\n      fireEvent.change(input, { target: { value: '새 제목' } });\n\n      // 500ms 이전에는 호출되지 않음\n      expect(mockOnSave).not.toHaveBeenCalled();\n\n      // 500ms 후 호출됨\n      jest.advanceTimersByTime(500);\n      await waitFor(() => {\n        expect(mockOnSave).toHaveBeenCalledWith('새 제목');\n      });\n\n      jest.useRealTimers();\n    });\n  });\n\n  describe('셀렉트 타입', () => {\n    const options = [\n      { value: 'Active', label: '활성' },\n      { value: 'Inactive', label: '비활성' },\n      { value: 'Draft', label: '초안' }\n    ];\n\n    it('옵션을 표시한다', () => {\n      render(\n        <EditableCell\n          value=\"Active\"\n          type=\"select\"\n          options={options}\n          onSave={mockOnSave}\n        />\n      );\n\n      expect(screen.getByText('활성')).toBeInTheDocument();\n    });\n\n    it('클릭 시 셀렉트로 변경된다', () => {\n      render(\n        <EditableCell\n          value=\"Active\"\n          type=\"select\"\n          options={options}\n          onSave={mockOnSave}\n        />\n      );\n\n      const displayElement = screen.getByText('활성');\n      fireEvent.click(displayElement);\n\n      expect(screen.getByRole('combobox')).toBeInTheDocument();\n    });\n\n    it('값 변경 시 저장된다', async () => {\n      render(\n        <EditableCell\n          value=\"Active\"\n          type=\"select\"\n          options={options}\n          onSave={mockOnSave}\n        />\n      );\n\n      const displayElement = screen.getByText('활성');\n      fireEvent.click(displayElement);\n\n      const select = screen.getByRole('combobox');\n      fireEvent.change(select, { target: { value: 'Inactive' } });\n\n      await waitFor(() => {\n        expect(mockOnSave).toHaveBeenCalledWith('Inactive');\n      });\n    });\n  });\n\n  describe('체크박스 타입', () => {\n    it('체크박스를 표시한다', () => {\n      render(\n        <EditableCell\n          value={true}\n          type=\"checkbox\"\n          onSave={mockOnSave}\n        />\n      );\n\n      const checkbox = screen.getByRole('checkbox');\n      expect(checkbox).toBeChecked();\n    });\n\n    it('체크박스 변경 시 저장된다', async () => {\n      render(\n        <EditableCell\n          value={true}\n          type=\"checkbox\"\n          onSave={mockOnSave}\n        />\n      );\n\n      const checkbox = screen.getByRole('checkbox');\n      fireEvent.click(checkbox);\n\n      await waitFor(() => {\n        expect(mockOnSave).toHaveBeenCalledWith(false);\n      });\n    });\n  });\n\n  describe('비활성화 상태', () => {\n    it('disabled 시 클릭해도 편집되지 않는다', () => {\n      render(\n        <EditableCell\n          value=\"테스트 제목\"\n          type=\"text\"\n          onSave={mockOnSave}\n          disabled={true}\n        />\n      );\n\n      const displayElement = screen.getByText('테스트 제목');\n      fireEvent.click(displayElement);\n\n      expect(screen.queryByDisplayValue('테스트 제목')).not.toBeInTheDocument();\n      expect(screen.getByText('테스트 제목')).toBeInTheDocument();\n    });\n  });\n\n  describe('저장 표시', () => {\n    it('저장 중 표시를 보여준다', async () => {\n      render(\n        <EditableCell\n          value=\"테스트 제목\"\n          type=\"text\"\n          onSave={mockOnSave}\n        />\n      );\n\n      const displayElement = screen.getByText('테스트 제목');\n      fireEvent.click(displayElement);\n\n      const input = screen.getByDisplayValue('테스트 제목');\n      fireEvent.change(input, { target: { value: '새 제목' } });\n      fireEvent.keyDown(input, { key: 'Enter' });\n\n      await waitFor(() => {\n        expect(screen.getByText('저장됨')).toBeInTheDocument();\n      });\n    });\n  });\n}); "],"version":3}