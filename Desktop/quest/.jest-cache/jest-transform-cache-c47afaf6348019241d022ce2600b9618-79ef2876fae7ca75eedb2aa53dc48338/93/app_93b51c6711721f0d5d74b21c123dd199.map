{"file":"/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/src/main/app/app.ts","mappings":";;;;;AAAA,sDAA8B;AAC9B,gDAAwB;AACxB,kFAA0D;AAC1D,gGAAwE;AACxE,4GAAoF;AACpF,+GAAuF;AACvF,+FAAuE;AACvE,yFAAiE;AACjE,6EAA6E;AAC7E,4FAAoE;AACpE,uDAAoD;AACpD,8DAAoE;AAEpE,MAAM,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;AAEtB,mCAAmC;AACnC,GAAG,CAAC,GAAG,CAAC,IAAA,cAAI,EAAC;IACX,MAAM,EAAE,CAAC,uBAAuB,EAAE,uBAAuB,EAAE,SAAS,CAAC;IACrE,WAAW,EAAE,IAAI;IACjB,OAAO,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC;IAC7D,cAAc,EAAE,CAAC,cAAc,EAAE,eAAe,EAAE,kBAAkB,CAAC;CACtE,CAAC,CAAC,CAAC;AAEJ,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAEhD,eAAe;AACf,GAAG,CAAC,GAAG,CAAC,kBAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;AAE/B,iBAAiB;AACjB,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,mBAAS,CAAC,KAAK,EAAE,mBAAS,CAAC,KAAK,CAAC,eAAK,CAAC,CAAC,CAAC;AAE9D,SAAS;AACT,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,wBAAc,CAAC,CAAC;AACrC,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,4BAAkB,CAAC,CAAC,CAAC,iBAAiB;AAChE,GAAG,CAAC,GAAG,CAAC,iBAAiB,EAAE,6BAAmB,CAAC,CAAC;AAChD,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,wBAAc,CAAC,CAAC,CAAC,aAAa;AACnD,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,sBAAY,CAAC,CAAC,CAAC,SAAS;AAChD,qDAAqD;AACrD,GAAG,CAAC,GAAG,CAAC,eAAe,EAAE,uBAAa,CAAC,CAAC,CAAC,aAAa;AAEtD,SAAS;AACT,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IACxB,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AAEH,cAAc;AACd,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IAC9B,GAAG,CAAC,IAAI,CAAC;QACP,MAAM,EAAE,IAAI;QACZ,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;QACnC,OAAO,EAAE,kCAAkC;KAC5C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,UAAU;AACV,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IACxB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,qBAAqB,EAAE,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC;AAEH,SAAS;AACT,GAAG,CAAC,GAAG,CAAC,2BAAY,CAAC,CAAC;AAEtB,kBAAe,GAAG,CAAC","names":[],"sources":["/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/src/main/app/app.ts"],"sourcesContent":["import express from 'express';\nimport cors from 'cors';\nimport passport from './infrastructure/security/passport';\nimport authController from './domains/users/controllers/authController';\nimport testCaseController from './domains/testcases/controllers/testCaseController';\nimport executionController from './domains/executions/controllers/executionController';\nimport treeController from './domains/tree/controllers/treeController';\nimport folderRoutes from './domains/folders/routes/folderRoutes';\n// import bulkController from './domains/folders/controllers/bulkController';\nimport releaseRoutes from './domains/releases/routes/releaseRoutes';\nimport { errorHandler } from './utils/errorHandler';\nimport { specs, swaggerUi } from './infrastructure/swagger/swagger';\n\nconst app = express();\n\n// CORS 설정 - Electron 앱을 위한 구체적인 설정\napp.use(cors({\n  origin: ['http://localhost:4000', 'http://localhost:3000', 'file://'],\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With']\n}));\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\n// Passport 초기화\napp.use(passport.initialize());\n\n// Swagger API 문서\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs));\n\n// 라우터 설정\napp.use('/api/auth', authController);\napp.use('/api/testcases', testCaseController); // 테스트케이스 API 활성화\napp.use('/api/executions', executionController);\napp.use('/api/tree', treeController); // 새로운 트리 API\napp.use('/api/folders', folderRoutes); // 폴더 API\n// app.use('/api/bulk', bulkController); // 일괄 작업 API\napp.use('/api/releases', releaseRoutes); // 릴리즈 관리 API\n\n// 기본 라우트\napp.get('/', (req, res) => {\n  res.json({ message: 'Quest Desktop App API' });\n});\n\n// 헬스 체크 엔드포인트\napp.get('/health', (req, res) => {\n  res.json({ \n    status: 'ok', \n    timestamp: new Date().toISOString(),\n    message: 'Quest Desktop App API is running'\n  });\n});\n\n// 404 핸들러\napp.use('*', (req, res) => {\n  res.status(404).json({ message: '요청한 리소스를 찾을 수 없습니다.' });\n});\n\n// 에러 핸들러\napp.use(errorHandler);\n\nexport default app; "],"version":3}