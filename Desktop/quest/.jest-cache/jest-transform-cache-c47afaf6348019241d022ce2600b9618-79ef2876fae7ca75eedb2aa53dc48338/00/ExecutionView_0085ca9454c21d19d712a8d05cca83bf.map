{"file":"/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/src/renderer/features/ReleaseManagementV2/components/ExecutionView.tsx","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/src/renderer/features/ReleaseManagementV2/components/ExecutionView.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { createPortal } from 'react-dom';\nimport styled from 'styled-components';\nimport { useGetReleaseTestCasesQuery, useUpdateReleaseExecutionStatsMutation, useGetReleaseExecutionStatsQuery, useUpdateTestCaseStatusMutation, useGetTestFoldersQuery, useGetImportedFoldersQuery, useAddImportedFoldersMutation, useRemoveImportedFolderMutation } from '../../../services/api';\nimport SimpleStatusDropdown from './SimpleStatusDropdown';\n\n\n// 타입 정의\ninterface TestCase {\n  id: string;\n  name: string;\n  title?: string;\n  description: string;\n  priority: 'P0' | 'P1' | 'P2' | 'P3' | 'High' | 'Medium' | 'Low';\n  status: 'Not Run' | 'Pass' | 'Fail' | 'Block' | 'Blocked' | 'Skip' | 'Active' | 'Inactive';\n  assignee?: string;\n  estimatedTime?: number;\n  actualTime?: number;\n  lastUpdated: string;\n  tags: string[];\n  suite?: string;\n  module?: string;\n  steps?: string[] | string;\n  expectedResult?: string;\n  expected?: string;\n  prereq?: string;\n  attachments?: string[];\n  executionStatus?: string;\n  executedAt?: string;\n  executedBy?: string;\n  createdBy?: string;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\ninterface Release {\n  id: string;\n  name: string;\n  version: string;\n  sprint?: string;\n  period?: string;\n  owner: string;\n  createdAt: string;\n}\n\ninterface ExecutionViewProps {\n  release: Release;\n  testCases?: TestCase[];\n  onTestCaseUpdate: (testCaseId: string, updates: Partial<TestCase>) => void;\n  onBulkUpdate: (testCaseIds: string[], updates: Partial<TestCase>) => void;\n  onAddTestCases?: (newTestCases: TestCase[]) => void;\n  onTestCasesLoad?: (testCases: TestCase[]) => void;\n}\n\n// 스타일 컴포넌트\nconst ExecutionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background: #f8fafc;\n  margin: 0; // 패딩 상쇄 제거\n`;\n\n// 상단 컨텍스트 바 - 흰색 컨셉 디자인\nconst TopContextBar = styled.div<{ isCollapsed: boolean }>`\n  background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);\n  border-bottom: 1px solid #e2e8f0;\n  padding: ${props => props.isCollapsed ? '16px 24px' : '24px 24px'};\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);\n  color: #1e293b;\n  transition: all 0.3s ease;\n  position: relative;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 1px;\n    background: linear-gradient(90deg, transparent 0%, #cbd5e1 50%, transparent 100%);\n  }\n  \n  @media (max-width: 1440px) {\n    padding: ${props => props.isCollapsed ? '14px 20px' : '20px 20px'};\n  }\n  \n  @media (max-width: 1280px) {\n    padding: ${props => props.isCollapsed ? '12px 16px' : '16px 16px'};\n  }\n  \n  @media (max-width: 768px) {\n    padding: ${props => props.isCollapsed ? '10px 12px' : '12px 12px'};\n  }\n`;\n\nconst ReleaseMeta = styled.div<{ isCollapsed: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${props => props.isCollapsed ? '0' : '16px'};\n`;\n\nconst ReleaseLeft = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n\nconst ReleaseRight = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n\nconst ReleaseInfo = styled.div<{ isCollapsed: boolean }>`\n  display: flex;\n  flex-direction: ${props => props.isCollapsed ? 'row' : 'column'};\n  align-items: ${props => props.isCollapsed ? 'center' : 'flex-start'};\n  gap: ${props => props.isCollapsed ? '16px' : '6px'};\n`;\n\nconst ReleaseNameContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n\nconst ReleaseName = styled.h2<{ isCollapsed: boolean }>`\n  margin: 0;\n  font-size: ${props => props.isCollapsed ? '18px' : '24px'};\n  font-weight: 700;\n  color: #1e293b;\n  transition: all 0.3s ease;\n`;\n\nconst ReleaseDetails = styled.div<{ isCollapsed: boolean }>`\n  display: flex;\n  gap: ${props => props.isCollapsed ? '12px' : '20px'};\n  font-size: ${props => props.isCollapsed ? '12px' : '14px'};\n  color: #64748b;\n  align-items: center;\n  transition: all 0.3s ease;\n`;\n\nconst ReleaseDetailItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 6px 12px;\n  background: #f1f5f9;\n  border-radius: 6px;\n  font-weight: 500;\n  font-size: 13px;\n  border: 1px solid #e2e8f0;\n  color: #475569;\n\n  &::before {\n    content: '';\n    width: 4px;\n    height: 4px;\n    background: #64748b;\n    border-radius: 50%;\n  }\n`;\n\nconst ProgressSummary = styled.div<{ isCollapsed: boolean }>`\n  display: ${props => props.isCollapsed ? 'none' : 'flex'};\n  align-items: center;\n  gap: 20px;\n  padding: 16px 20px;\n  background: #f8fafc;\n  border-radius: 12px;\n  margin-bottom: 16px;\n  border: 1px solid #e2e8f0;\n  transition: all 0.3s ease;\n`;\n\nconst ActionButton = styled.button`\n  padding: 10px 20px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  background: #3b82f6;\n  color: white;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  \n  &:hover:not(:disabled) {\n    background: #2563eb;\n    border-color: #2563eb;\n    transform: translateY(-1px);\n    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);\n  }\n  \n  &:active:not(:disabled) {\n    transform: translateY(0);\n  }\n  \n  &:disabled {\n    background: #e5e7eb;\n    border-color: #d1d5db;\n    color: #9ca3af;\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n\n  &::before {\n    content: '';\n    width: 16px;\n    height: 16px;\n    background: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\"/></svg>');\n    background-size: contain;\n    background-repeat: no-repeat;\n  }\n`;\n\nconst CollapseButton = styled.button<{ isCollapsed: boolean }>`\n  padding: 8px 16px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  background: #f8fafc;\n  color: #64748b;\n  font-size: 13px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  \n  &:hover {\n    background: #f1f5f9;\n    border-color: #94a3b8;\n    color: #475569;\n  }\n\n  &::before {\n    content: '';\n    width: 14px;\n    height: 14px;\n    background: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"${props => props.isCollapsed ? 'M19 9l-7 7-7-7' : 'M5 15l7-7 7 7'}\"/></svg>');\n    background-size: contain;\n    background-repeat: no-repeat;\n    transition: transform 0.2s ease;\n  }\n`;\n\n// 모달 스타일 컴포넌트들\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 9999;\n`;\n\nconst ModalContent = styled.div`\n  background: white;\n  border-radius: 8px;\n  padding: 24px;\n  width: 80%;\n  max-width: 800px;\n  max-height: 80vh;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ModalHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid #e5e7eb;\n`;\n\nconst ModalTitle = styled.h2`\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #1f2937;\n`;\n\n\n\nconst ModalBody = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  margin-bottom: 20px;\n`;\n\nconst FolderList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\n// 테스트 관리 영역과 동일한 폴더 트리 스타일드 컴포넌트들\nconst ImportFolderItem = styled.div<{ level: number; $isSelected: boolean }>`\n  display: flex;\n  align-items: center;\n  height: 28px;\n  padding-left: ${props => props.level * 16 + 12}px;\n  padding-right: 12px;\n  cursor: pointer;\n  position: relative;\n  background: ${props => props.$isSelected ? '#dbeafe' : 'transparent'};\n  border-left: ${props => props.$isSelected ? '3px solid #3b82f6' : 'none'};\n  transition: background-color 0.2s ease;\n  font-weight: ${props => props.$isSelected ? '600' : '400'};\n\n  &:hover {\n    background: ${props => props.$isSelected ? '#dbeafe' : '#f9fafb'};\n  }\n`;\n\nconst ImportFolderCheckbox = styled.input`\n  margin-right: 8px;\n  width: 14px;\n  height: 14px;\n  accent-color: #3b82f6;\n`;\n\nconst ImportFolderIcon = styled.div`\n  width: 16px;\n  height: 16px;\n  margin-right: 8px;\n  position: relative;\n  color: #6b7280;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border: 2px solid currentColor;\n    border-radius: 2px;\n    background: transparent;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 2px;\n    right: 2px;\n    height: 3px;\n    background: currentColor;\n    border-radius: 1px 1px 0 0;\n  }\n`;\n\nconst ImportTextContainer = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  min-width: 0;\n  overflow: hidden;\n`;\n\nconst ImportFolderName = styled.span`\n  font-size: 14px;\n  font-weight: 400;\n  color: #111827;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 100%;\n  display: block;\n`;\n\nconst ImportTestCaseCount = styled.span`\n  font-size: 12px;\n  font-weight: 500;\n  color: #6b7280;\n  margin-left: 4px;\n`;\n\nconst ImportFolderChildren = styled.div`\n  position: relative;\n`;\n\nconst ImportRemoveButton = styled.button`\n  width: 20px;\n  height: 20px;\n  background: #ef4444;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  opacity: 0;\n  transition: opacity 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  font-weight: bold;\n  margin-left: 8px;\n\n  &:hover {\n    background: #dc2626;\n  }\n\n  ${ImportFolderItem}:hover & {\n    opacity: 1;\n  }\n`;\n\nconst FolderItem = styled.div<{ level: number }>`\n  display: flex;\n  align-items: center;\n  padding: 8px 12px;\n  border: 1px solid #e5e7eb;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.2s;\n  margin-left: ${props => props.level * 20}px;\n  \n  &:hover {\n    background: #f9fafb;\n    border-color: #d1d5db;\n  }\n  \n  &.selected {\n    background: #eff6ff;\n    border-color: #3b82f6;\n  }\n`;\n\nconst FolderCheckbox = styled.input`\n  margin-right: 12px;\n`;\n\nconst FolderInfo = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst FolderIcon = styled.span`\n  color: #6b7280;\n  font-size: 16px;\n`;\n\nconst FolderName = styled.div`\n  font-weight: 500;\n  color: #1f2937;\n`;\n\nconst FolderCount = styled.div`\n  font-size: 12px;\n  color: #6b7280;\n  background: #f3f4f6;\n  padding: 2px 6px;\n  border-radius: 4px;\n  margin-left: auto;\n`;\n\nconst ModalFooter = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  padding-top: 16px;\n  border-top: 1px solid #e5e7eb;\n`;\n\nconst CancelButton = styled.button`\n  padding: 8px 16px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  background: white;\n  color: #374151;\n  font-size: 14px;\n  cursor: pointer;\n  \n  &:hover {\n    background: #f9fafb;\n  }\n`;\n\nconst AddButton = styled.button`\n  padding: 8px 16px;\n  border: 1px solid #3b82f6;\n  border-radius: 6px;\n  background: #3b82f6;\n  color: white;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  \n  &:hover {\n    background: #2563eb;\n  }\n  \n  &:disabled {\n    background: #9ca3af;\n    border-color: #9ca3af;\n    cursor: not-allowed;\n  }\n`;\n\nconst ProgressItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 6px;\n  padding: 12px 16px;\n  background: white;\n  border-radius: 6px;\n  border: 1px solid #e2e8f0;\n  transition: all 0.2s ease;\n  min-width: 80px;\n  min-height: 65px;\n  flex: 1;\n\n  &:hover {\n    background: #fafafa;\n    border-color: #cbd5e1;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n  }\n`;\n\nconst ProgressNumber = styled.span<{ color: string }>`\n  font-size: 20px;\n  font-weight: 700;\n  color: ${props => props.color};\n  line-height: 1;\n`;\n\nconst ProgressLabel = styled.span<{ color: string }>`\n  font-size: 11px;\n  color: ${props => props.color};\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst ProgressBar = styled.div`\n  flex: 1;\n  height: 8px;\n  background: #f1f5f9;\n  border-radius: 4px;\n  overflow: hidden;\n  margin: 0 24px;\n  border: 1px solid #e2e8f0;\n`;\n\nconst ProgressFill = styled.div<{ percentage: number }>`\n  height: 100%;\n  background: linear-gradient(90deg, #3b82f6, #10b981);\n  width: ${props => props.percentage}%;\n  transition: width 0.3s ease;\n  border-radius: 4px;\n`;\n\nconst FilterSummary = styled.div<{ isCollapsed: boolean }>`\n  display: ${props => props.isCollapsed ? 'none' : 'flex'};\n  align-items: center;\n  gap: 8px;\n  flex-wrap: wrap;\n  margin-top: 12px;\n`;\n\nconst FilterBadge = styled.span`\n  background: #f1f5f9;\n  color: #475569;\n  padding: 6px 12px;\n  border-radius: 6px;\n  font-size: 12px;\n  font-weight: 500;\n  border: 1px solid #e2e8f0;\n`;\n\nconst LiveIndicator = styled.div<{ $isLive: boolean }>`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 11px;\n  font-weight: 600;\n  background: ${props => props.$isLive \n    ? '#ecfdf5' \n    : '#fef2f2'};\n  color: ${props => props.$isLive ? '#16a34a' : '#dc2626'};\n  border: 1px solid ${props => props.$isLive \n    ? '#bbf7d0' \n    : '#fecaca'};\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst LiveDot = styled.div<{ $isLive: boolean }>`\n  width: 6px;\n  height: 6px;\n  border-radius: 50%;\n  background: ${props => props.$isLive ? '#16a34a' : '#dc2626'};\n  animation: ${props => props.$isLive ? 'livePulse 2s infinite' : 'none'};\n  \n  @keyframes livePulse {\n    0%, 100% { \n      opacity: 1; \n      transform: scale(1);\n    }\n    50% { \n      opacity: 0.5; \n      transform: scale(1.1);\n    }\n  }\n`;\n\n// 메인 콘텐츠 영역\nconst MainContent = styled.div`\n  display: flex;\n  flex: 1;\n  overflow: hidden;\n  min-height: 0; // flex 아이템이 축소될 수 있도록 함\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\n// 좌측 필터 패널\nconst FilterPanel = styled.div<{ width: number }>`\n  width: ${props => props.width}px;\n  background: white;\n  border-right: 1px solid #e2e8f0;\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n  position: relative;\n  height: 100%; // 전체 높이 사용\n  min-height: 0; // flex 축소 허용\n  \n  @media (max-width: 1440px) {\n    width: ${props => Math.max(props.width * 0.9, 200)}px;\n  }\n  \n  @media (max-width: 1280px) {\n    width: ${props => Math.max(props.width * 0.7, 180)}px;\n  }\n  \n  @media (max-width: 1024px) {\n    width: ${props => Math.max(props.width * 0.6, 160)}px;\n  }\n  \n  @media (max-width: 768px) {\n    width: 100%;\n    height: auto;\n    border-right: none;\n    border-bottom: 1px solid #e2e8f0;\n  }\n`;\n\n// 좌측 패널 크기 조절 핸들\nconst LeftPanelResizeHandle = styled.div`\n  position: absolute;\n  top: 0;\n  right: -4px;\n  width: 8px;\n  height: 100%;\n  cursor: col-resize;\n  background: transparent;\n  z-index: 10;\n\n  &:hover {\n    background: rgba(59, 130, 246, 0.1);\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 2px;\n    height: 20px;\n    background: #d1d5db;\n    border-radius: 1px;\n  }\n`;\n\nconst FilterSection = styled.div`\n  padding: 16px;\n  border-bottom: 1px solid #f1f5f9;\n`;\n\nconst FilterTitle = styled.h3`\n  margin: 0 0 12px 0;\n  font-size: 14px;\n  font-weight: 600;\n  color: #1e293b;\n`;\n\nconst FilterGroup = styled.div`\n  margin-bottom: 16px;\n`;\n\nconst FilterLabel = styled.label`\n  display: block;\n  font-size: 12px;\n  font-weight: 500;\n  color: #64748b;\n  margin-bottom: 6px;\n`;\n\nconst FilterSelect = styled.select`\n  width: 100%;\n  padding: 8px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  background: white;\n  \n  &:focus {\n    outline: none;\n    border-color: #3b82f6;\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n`;\n\nconst FilterInput = styled.input`\n  width: 100%;\n  padding: 8px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  \n  &:focus {\n    outline: none;\n    border-color: #3b82f6;\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n`;\n\nconst SavedFilters = styled.div`\n  padding: 16px;\n`;\n\nconst SavedFilterItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 12px;\n  margin-bottom: 8px;\n  background: #f8fafc;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: background 0.2s;\n  \n  &:hover {\n    background: #f1f5f9;\n  }\n`;\n\nconst BulkActionPanel = styled.div`\n  padding: 16px;\n  background: #fef3c7;\n  border-top: 1px solid #fde68a;\n`;\n\nconst BulkActionButton = styled.button<{ variant: 'pass' | 'fail' | 'block' | 'skip' }>`\n  width: 100%;\n  padding: 8px 12px;\n  margin-bottom: 8px;\n  border: none;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  \n  background: ${props => {\n    switch (props.variant) {\n      case 'pass': return '#10b981';\n      case 'fail': return '#ef4444';\n      case 'block': return '#f59e0b';\n      case 'skip': return '#8b5cf6';\n      default: return '#6b7280';\n    }\n  }};\n  color: white;\n  \n  &:hover {\n    opacity: 0.9;\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\n// 중앙 테스트 리스트\nconst TestListContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background: white;\n  min-width: 0; // flex 아이템이 축소될 수 있도록 함\n  height: 100%; // 전체 높이 사용\n  min-height: 0; // flex 축소 허용\n`;\n\nconst TestListHeader = styled.div`\n  padding: 16px 24px;\n  border-bottom: 1px solid #e2e8f0;\n  background: #f8fafc;\n  \n  @media (max-width: 1440px) {\n    padding: 14px 20px;\n  }\n  \n  @media (max-width: 1280px) {\n    padding: 12px 16px;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 12px;\n  }\n`;\n\nconst TestListTitle = styled.h3`\n  margin: 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: #1e293b;\n`;\n\nconst TestTable = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  min-height: 0; // flex 아이템이 축소될 수 있도록 함\n  height: 100%; // 전체 높이 사용\n`;\n\nconst TableHeader = styled.div`\n  display: grid;\n  grid-template-columns: 40px 80px 80px 1fr 120px 120px 100px 120px 120px;\n  gap: 16px;\n  padding: 12px 24px;\n  background: #f8fafc;\n  border-bottom: 1px solid #e2e8f0;\n  font-size: 12px;\n  font-weight: 600;\n  color: #64748b;\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  \n  @media (max-width: 1440px) {\n    grid-template-columns: 40px 70px 70px 1fr 100px 100px 90px 100px 90px;\n    gap: 12px;\n    padding: 10px 20px;\n    font-size: 11px;\n  }\n  \n  @media (max-width: 1280px) {\n    grid-template-columns: 35px 60px 60px 1fr 90px 90px 80px 90px 80px;\n    gap: 10px;\n    padding: 8px 16px;\n    font-size: 11px;\n  }\n  \n  @media (max-width: 1024px) {\n    grid-template-columns: 30px 50px 50px 1fr 80px 80px 70px;\n    gap: 8px;\n    padding: 8px 12px;\n    font-size: 10px;\n  }\n  \n  @media (max-width: 768px) {\n    display: none; // 모바일에서는 카드 형태로 변경\n  }\n`;\n\nconst TableRow = styled.div<{ isSelected?: boolean; status?: string }>`\n  display: grid;\n  grid-template-columns: 40px 80px 80px 1fr 120px 120px 100px 120px 120px;\n  gap: 16px;\n  padding: 12px 24px;\n  border-bottom: 1px solid #f1f5f9;\n  cursor: pointer;\n  transition: all 0.2s;\n  position: relative;\n  \n  /* 실행되지 않은 케이스 - 흐릿하게 표시 */\n  opacity: ${props => {\n    const isExecuted = props.status && props.status !== 'Not Run' && props.status !== 'Inactive';\n    return isExecuted ? 1 : 0.6;\n  }};\n  \n  /* 실행 상태에 따른 배경색 */\n  background: ${props => {\n    if (props.isSelected) return '#eff6ff';\n    const isExecuted = props.status && props.status !== 'Not Run' && props.status !== 'Inactive';\n    if (!isExecuted) return '#fafafa'; // 실행되지 않은 케이스는 회색 배경\n    \n    switch (props.status) {\n      case 'Pass': return '#f0fdf4';\n      case 'Fail': return '#fef2f2';\n      case 'Block': return '#fffbeb';\n      case 'Skip': return '#faf5ff';\n      default: return '#ffffff';\n    }\n  }};\n  \n  /* 실행된 케이스는 좌측에 상태 표시 바 */\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    width: 4px;\n    background: ${props => {\n      if (props.isSelected) return '#3b82f6';\n      const isExecuted = props.status && props.status !== 'Not Run' && props.status !== 'Inactive';\n      if (!isExecuted) return 'transparent';\n      \n      switch (props.status) {\n        case 'Pass': return '#10b981';\n        case 'Fail': return '#ef4444';\n        case 'Block': return '#f59e0b';\n        case 'Skip': return '#8b5cf6';\n        default: return 'transparent';\n      }\n    }};\n  }\n  \n  /* 실행되지 않은 케이스에 점선 테두리 */\n  border: ${props => {\n    const isExecuted = props.status && props.status !== 'Not Run' && props.status !== 'Inactive';\n    return isExecuted ? 'none' : '1px dashed #d1d5db';\n  }};\n  \n  &:hover {\n    opacity: 1;\n    background: ${props => {\n      if (props.isSelected) return '#dbeafe';\n      const isExecuted = props.status && props.status !== 'Not Run' && props.status !== 'Inactive';\n      if (!isExecuted) return '#f3f4f6';\n      \n      switch (props.status) {\n        case 'Pass': return '#ecfdf5';\n        case 'Fail': return '#fef2f2';\n        case 'Block': return '#fefce8';\n        case 'Skip': return '#f5f3ff';\n        default: return '#f8fafc';\n      }\n    }};\n    transform: translateY(-1px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  }\n  \n  @media (max-width: 1440px) {\n    grid-template-columns: 40px 70px 70px 1fr 100px 100px 90px 100px 90px;\n    gap: 12px;\n    padding: 10px 20px;\n  }\n  \n  @media (max-width: 1280px) {\n    grid-template-columns: 35px 60px 60px 1fr 90px 90px 80px 90px 80px;\n    gap: 10px;\n    padding: 8px 16px;\n  }\n  \n  @media (max-width: 1024px) {\n    grid-template-columns: 30px 50px 50px 1fr 80px 80px 70px;\n    gap: 8px;\n    padding: 8px 12px;\n  }\n  \n  @media (max-width: 768px) {\n    display: block; // 카드 형태로 변경\n    padding: 16px;\n    margin-bottom: 8px;\n    border-radius: 8px;\n    border: 1px solid #e2e8f0;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst TableCell = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n  color: #1e293b;\n`;\n\nconst StatusBadge = styled.span<{ status: string }>`\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  padding: 6px 12px;\n  border-radius: 16px;\n  font-size: 12px;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  border: 2px solid transparent;\n  min-width: 80px;\n  justify-content: center;\n  \n  background: ${props => {\n    switch (props.status) {\n      case 'Not Run': return '#f8fafc';\n      case 'Pass': return '#dcfce7';\n      case 'Fail': return '#fee2e2';\n      case 'Block': return '#fef3c7';\n      case 'Skip': return '#f3e8ff';\n      default: return '#f8fafc';\n    }\n  }};\n  \n  border-color: ${props => {\n    switch (props.status) {\n      case 'Not Run': return '#e2e8f0';\n      case 'Pass': return '#10b981';\n      case 'Fail': return '#ef4444';\n      case 'Block': return '#f59e0b';\n      case 'Skip': return '#8b5cf6';\n      default: return '#e2e8f0';\n    }\n  }};\n  \n  color: ${props => {\n    switch (props.status) {\n      case 'Not Run': return '#64748b';\n      case 'Pass': return '#065f46';\n      case 'Fail': return '#dc2626';\n      case 'Block': return '#92400e';\n      case 'Skip': return '#6b21a8';\n      default: return '#64748b';\n    }\n  }};\n  \n  &::before {\n    content: '';\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background: ${props => {\n      switch (props.status) {\n        case 'Not Run': return '#94a3b8';\n        case 'Pass': return '#10b981';\n        case 'Fail': return '#ef4444';\n        case 'Block': return '#f59e0b';\n        case 'Skip': return '#8b5cf6';\n        default: return '#94a3b8';\n      }\n    }};\n  }\n`;\n\nconst PriorityBadge = styled.span<{ priority: string }>`\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  font-weight: 500;\n  \n  background: ${props => {\n    switch (props.priority) {\n      case 'P0': return '#fee2e2';\n      case 'P1': return '#fef3c7';\n      case 'P2': return '#dbeafe';\n      case 'P3': return '#f3f4f6';\n      default: return '#f3f4f6';\n    }\n  }};\n  \n  color: ${props => {\n    switch (props.priority) {\n      case 'P0': return '#dc2626';\n      case 'P1': return '#d97706';\n      case 'P2': return '#2563eb';\n      case 'P3': return '#6b7280';\n      default: return '#6b7280';\n    }\n  }};\n`;\n\n// 드롭다운 컨테이너\nconst StatusDropdownContainer = styled.div`\n  position: relative;\n  display: inline-block;\n  z-index: 999999; /* 최상단 z-index */\n`;\n\n// 드롭다운 버튼\nconst StatusDropdownButton = styled.button<{ isOpen: boolean; status?: string }>`\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 12px;\n  border: 1px solid;\n  border-radius: 6px;\n  font-size: 13px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  min-width: 110px;\n  justify-content: space-between;\n  \n  /* 상태별 스타일 */\n  background: ${props => {\n    switch (props.status) {\n      case 'Pass': return '#f0fdf4';\n      case 'Fail': return '#fef2f2';\n      case 'Block': return '#fffbeb';\n      case 'Skip': return '#faf5ff';\n      case 'Not Run':\n      case 'Inactive':\n      default: return 'white';\n    }\n  }};\n  \n  border-color: ${props => {\n    if (props.isOpen) return '#3b82f6';\n    switch (props.status) {\n      case 'Pass': return '#10b981';\n      case 'Fail': return '#ef4444';\n      case 'Block': return '#f59e0b';\n      case 'Skip': return '#8b5cf6';\n      case 'Not Run':\n      case 'Inactive':\n      default: return '#d1d5db';\n    }\n  }};\n  \n  color: ${props => {\n    switch (props.status) {\n      case 'Pass': return '#065f46';\n      case 'Fail': return '#dc2626';\n      case 'Block': return '#92400e';\n      case 'Skip': return '#6b21a8';\n      case 'Not Run':\n      case 'Inactive':\n      default: return '#374151';\n    }\n  }};\n  \n  &:hover {\n    border-color: #3b82f6;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  }\n  \n  ${props => props.isOpen && `\n    border-color: #3b82f6 !important;\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  `}\n`;\n\n// 상태 표시 점\nconst StatusDot = styled.span<{ status?: string }>`\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background: ${props => {\n    switch (props.status) {\n      case 'Pass': return '#10b981';\n      case 'Fail': return '#ef4444';\n      case 'Block': return '#f59e0b';\n      case 'Skip': return '#8b5cf6';\n      case 'Not Run':\n      case 'Inactive':\n      default: return '#94a3b8';\n    }\n  }};\n`;\n\n// 상태 텍스트\nconst StatusText = styled.span`\n  flex: 1;\n  text-align: left;\n`;\n\n// 드롭다운 화살표\nconst DropdownArrow = styled.span<{ isOpen: boolean }>`\n  font-size: 12px;\n  transition: transform 0.2s;\n  transform: ${props => props.isOpen ? 'rotate(180deg)' : 'rotate(0deg)'};\n`;\n\n// 상태 표시 정보 함수\nconst getStatusDisplay = (status?: string) => {\n  switch (status) {\n    case 'Pass': return { text: 'Pass', color: '#10b981' };\n    case 'Fail': return { text: 'Fail', color: '#ef4444' };\n    case 'Block': return { text: 'Block', color: '#f59e0b' };\n    case 'Skip': return { text: 'Skip', color: '#8b5cf6' };\n    case 'Not Run': return { text: 'Not Run', color: '#94a3b8' };\n    case 'Inactive': return { text: 'Inactive', color: '#6b7280' };\n    case 'Untested': return { text: 'Untested', color: '#9ca3af' };\n    case '': \n    case null:\n    case undefined:\n    default: return { text: 'Not Run', color: '#94a3b8' };\n  }\n};\n\n// Portal용 드롭다운 메뉴 - 절대 위치로 렌더링\nconst PortalDropdownMenu = styled.div<{ rect: DOMRect; isOpen: boolean }>`\n  position: fixed;\n  top: ${props => props.rect.bottom + 4}px;\n  left: ${props => props.rect.left}px;\n  width: ${props => props.rect.width}px;\n  z-index: 99999999; /* 최상단 z-index */\n  min-width: 140px;\n  background: white;\n  border: 1px solid #d1d5db;\n  border-radius: 8px;\n  box-shadow: \n    0 20px 25px -5px rgba(0, 0, 0, 0.1), \n    0 10px 10px -5px rgba(0, 0, 0, 0.04),\n    0 0 0 1px rgba(0, 0, 0, 0.05);\n  overflow: hidden;\n  \n  display: ${props => props.isOpen ? 'block' : 'none'};\n  opacity: ${props => props.isOpen ? '1' : '0'};\n  transform: ${props => props.isOpen ? 'translateY(0) scale(1)' : 'translateY(-10px) scale(0.95)'};\n  transition: all 0.15s ease-out;\n  transform-origin: top center;\n`;\n\n// 기존 드롭다운 메뉴 (Portal 사용하지 않을 때)\nconst StatusDropdownMenu = styled.div<{ isOpen: boolean; position: 'top' | 'bottom' }>`\n  position: absolute;\n  top: calc(100% + 4px);\n  left: 0;\n  right: 0;\n  z-index: 9999999; /* 최상단 z-index */\n  min-width: 140px;\n  background: white;\n  border: 1px solid #d1d5db;\n  border-radius: 8px;\n  box-shadow: \n    0 20px 25px -5px rgba(0, 0, 0, 0.1), \n    0 10px 10px -5px rgba(0, 0, 0, 0.04),\n    0 0 0 1px rgba(0, 0, 0, 0.05);\n  overflow: hidden;\n  \n  display: ${props => props.isOpen ? 'block' : 'none'};\n  opacity: ${props => props.isOpen ? '1' : '0'};\n  transform: ${props => props.isOpen ? 'translateY(0) scale(1)' : 'translateY(-10px) scale(0.95)'};\n  transition: all 0.15s ease-out;\n  transform-origin: top center;\n`;\n\n// 드롭다운 아이템\nconst StatusDropdownItem = styled.button<{ status: string; isSelected?: boolean }>`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  width: 100%;\n  padding: 10px 12px;\n  border: none;\n  background: ${props => props.isSelected ? \n    (() => {\n      switch (props.status) {\n        case 'Pass': return '#f0fdf4';\n        case 'Fail': return '#fef2f2';\n        case 'Block': return '#fffbeb';\n        case 'Skip': return '#faf5ff';\n        default: return '#f8fafc';\n      }\n    })() : 'white'\n  };\n  color: #374151;\n  font-size: 14px;\n  font-weight: ${props => props.isSelected ? '600' : '500'};\n  cursor: pointer;\n  transition: background 0.2s;\n  text-align: left;\n  position: relative;\n  z-index: 9999999; /* 최상단 z-index */\n  \n  /* 선택된 항목 표시 */\n  ${props => props.isSelected && `\n    &::after {\n      content: '✓';\n      position: absolute;\n      right: 12px;\n      color: ${(() => {\n        switch (props.status) {\n          case 'Pass': return '#10b981';\n          case 'Fail': return '#ef4444';\n          case 'Block': return '#f59e0b';\n          case 'Skip': return '#8b5cf6';\n          default: return '#94a3b8';\n        }\n      })()};\n      font-weight: bold;\n      font-size: 16px;\n    }\n  `}\n  \n  &:hover {\n    background: ${props => {\n      switch (props.status) {\n        case 'Pass': return '#f0fdf4';\n        case 'Fail': return '#fef2f2';\n        case 'Block': return '#fffbeb';\n        case 'Skip': return '#faf5ff';\n        default: return '#f8fafc';\n      }\n    }};\n  }\n  \n  &::before {\n    content: '';\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background: ${props => {\n      switch (props.status) {\n        case 'Pass': return '#10b981';\n        case 'Fail': return '#ef4444';\n        case 'Block': return '#f59e0b';\n        case 'Skip': return '#8b5cf6';\n        default: return '#94a3b8';\n      }\n    }};\n  }\n`;\n\n// 우측 상세 패널\nconst DetailPanel = styled.div<{ isOpen: boolean; width: number }>`\n  width: ${props => props.isOpen ? `${props.width}px` : '0'};\n  background: white;\n  border-left: 1px solid #e2e8f0;\n  overflow: hidden;\n  transition: width 0.3s ease;\n  position: relative;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  \n  @media (max-width: 1440px) {\n    width: ${props => props.isOpen ? `${Math.min(props.width, 320)}px` : '0'};\n  }\n  \n  @media (max-width: 1280px) {\n    width: ${props => props.isOpen ? `${Math.min(props.width, 280)}px` : '0'};\n  }\n  \n  @media (max-width: 1024px) {\n    width: ${props => props.isOpen ? `${Math.min(props.width, 250)}px` : '0'};\n  }\n  \n  @media (max-width: 768px) {\n    width: ${props => props.isOpen ? '100%' : '0'};\n    position: absolute;\n    top: 0;\n    right: 0;\n    z-index: 1000;\n    box-shadow: -4px 0 12px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst ResizeHandle = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  width: 4px;\n  background: transparent;\n  cursor: col-resize;\n  z-index: 10;\n  \n  &:hover {\n    background: #3b82f6;\n  }\n  \n  &:active {\n    background: #2563eb;\n  }\n`;\n\nconst DetailHeader = styled.div`\n  padding: 16px 20px;\n  border-bottom: 1px solid #e5e7eb;\n  background: #f9fafb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 56px;\n  min-height: 56px;\n  flex-shrink: 0;\n`;\n\nconst DetailHeaderTitle = styled.h3`\n  margin: 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: #111827;\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  font-size: 18px;\n  cursor: pointer;\n  color: #6b7280;\n  padding: 4px;\n  border-radius: 4px;\n  \n  &:hover {\n    background: #f3f4f6;\n    color: #374151;\n  }\n`;\n\nconst DetailContent = styled.div`\n  flex: 1;\n  padding: 24px;\n  overflow-y: auto;\n  overflow-x: hidden;\n  height: 0;\n  min-height: 0;\n`;\n\n// 심플한 오버뷰 스타일드 컴포넌트들\nconst SimpleHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 20px;\n  padding-bottom: 12px;\n  border-bottom: 1px solid #e5e7eb;\n`;\n\nconst SimpleTitle = styled.h2`\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #1e293b;\n  line-height: 1.4;\n  flex: 1;\n`;\n\nconst SimpleStatus = styled.span<{ status: string }>`\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  margin-left: 12px;\n  \n  background: ${props => {\n    switch (props.status) {\n      case 'Pass': return '#dcfce7';\n      case 'Fail': return '#fee2e2';\n      case 'Block': return '#fef3c7';\n      case 'Skip': return '#f3e8ff';\n      case 'Active': return '#dbeafe';\n      case 'Inactive': return '#f1f5f9';\n      default: return '#f1f5f9';\n    }\n  }};\n  \n  color: ${props => {\n    switch (props.status) {\n      case 'Pass': return '#166534';\n      case 'Fail': return '#dc2626';\n      case 'Block': return '#d97706';\n      case 'Skip': return '#7c3aed';\n      case 'Active': return '#2563eb';\n      case 'Inactive': return '#64748b';\n      default: return '#64748b';\n    }\n  }};\n`;\n\nconst SimpleInfo = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n  padding: 12px;\n  background: #f9fafb;\n  border-radius: 6px;\n`;\n\nconst SimpleInfoItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`;\n\nconst SimpleLabel = styled.span`\n  font-size: 13px;\n  font-weight: 500;\n  color: #64748b;\n`;\n\nconst SimpleValue = styled.span<{ priority?: string }>`\n  font-size: 13px;\n  font-weight: 600;\n  color: #1e293b;\n  \n  ${props => props.priority && `\n    color: ${props.priority === 'High' ? '#dc2626' : \n            props.priority === 'Medium' ? '#d97706' : \n            props.priority === 'Low' ? '#059669' : '#1e293b'};\n  `}\n`;\n\nconst SimpleSection = styled.div`\n  margin-bottom: 16px;\n`;\n\nconst SimpleText = styled.div`\n  font-size: 14px;\n  line-height: 1.5;\n  color: #4b5563;\n  margin-top: 4px;\n  padding: 8px 0;\n`;\n\nconst SimpleSteps = styled.div`\n  margin-top: 4px;\n`;\n\nconst SimpleStep = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-bottom: 8px;\n  padding: 4px 0;\n`;\n\nconst SimpleStepNumber = styled.span`\n  font-size: 13px;\n  font-weight: 600;\n  color: #3b82f6;\n  min-width: 20px;\n`;\n\nconst SimpleStepText = styled.span`\n  font-size: 14px;\n  line-height: 1.4;\n  color: #4b5563;\n`;\n\nconst DetailSection = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst DetailTitle = styled.h4`\n  margin: 0 0 12px 0;\n  font-size: 14px;\n  font-weight: 600;\n  color: #1e293b;\n`;\n\nconst DetailText = styled.p`\n  margin: 0 0 8px 0;\n  font-size: 14px;\n  color: #374151;\n  line-height: 1.5;\n`;\n\nconst StatusChangeForm = styled.div`\n  margin-top: 16px;\n`;\n\nconst StatusRadioGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-bottom: 16px;\n`;\n\nconst StatusRadio = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.2s;\n  \n  &:hover {\n    background: #f8fafc;\n  }\n  \n  input[type=\"radio\"]:checked + & {\n    background: #eff6ff;\n    border-color: #3b82f6;\n  }\n`;\n\nconst CommentTextarea = styled.textarea`\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  resize: vertical;\n  min-height: 80px;\n  \n  &:focus {\n    outline: none;\n    border-color: #3b82f6;\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n`;\n\nconst SaveButton = styled.button`\n  width: 100%;\n  padding: 12px;\n  background: #3b82f6;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background 0.2s;\n  \n  &:hover {\n    background: #2563eb;\n  }\n`;\n\nconst HistoryList = styled.div`\n  max-height: 200px;\n  overflow-y: auto;\n`;\n\nconst HistoryItem = styled.div`\n  padding: 8px 0;\n  border-bottom: 1px solid #f1f5f9;\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst HistoryMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-size: 12px;\n  color: #64748b;\n  margin-bottom: 4px;\n`;\n\nconst HistoryChange = styled.div`\n  font-size: 14px;\n  color: #1e293b;\n`;\n\nconst ExecutionView: React.FC<ExecutionViewProps> = ({ release, testCases = [], onTestCaseUpdate, onBulkUpdate, onAddTestCases, onTestCasesLoad }) => {\n  const [selectedTestCase, setSelectedTestCase] = useState<TestCase | null>(null);\n  const [selectedTestCases, setSelectedTestCases] = useState<string[]>([]);\n  const [filters, setFilters] = useState({\n    status: '',\n    priority: '',\n    suite: '',\n    assignee: '',\n    search: ''\n  });\n  const [isLive, setIsLive] = useState(true);\n  const [openDropdowns, setOpenDropdowns] = useState<Record<string, boolean>>({});\n  const [dropdownPositions, setDropdownPositions] = useState<Record<string, 'top' | 'bottom'>>({});\n  const [dropdownRects, setDropdownRects] = useState<Record<string, DOMRect>>({});\n  const [currentComment, setCurrentComment] = useState('');\n  const [localTestCases, setLocalTestCases] = useState<any[]>([]);\n  \n  // 폴더 가져오기 관련 상태\n  const [showTestCaseModal, setShowTestCaseModal] = useState(false);\n  const [selectedTestCasesToAdd, setSelectedTestCasesToAdd] = useState<string[]>([]);\n  const [isLoadingTestCases, setIsLoadingTestCases] = useState(false);\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [selectedImportedFolder, setSelectedImportedFolder] = useState<any>(null);\n  const [folderTestCases, setFolderTestCases] = useState<any[]>([]);\n  const [importedFolders, setImportedFolders] = useState<any[]>([]);\n  const [detailPanelWidth, setDetailPanelWidth] = useState(350); // 400 → 350으로 축소\n  const [isResizing, setIsResizing] = useState(false);\n  const [leftPanelWidth, setLeftPanelWidth] = useState(240); // 280 → 240으로 축소\n  const [isLeftPanelResizing, setIsLeftPanelResizing] = useState(false);\n\n  // API 호출 - 자동으로 테스트케이스 조회\n  const { data: apiTestCasesResponse = [], isLoading, error, refetch } = useGetReleaseTestCasesQuery(release.id as any, {\n    pollingInterval: 5000, // 5초마다 자동 갱신\n  });\n  \n  // API 응답 디버깅\n  console.log('=== API 응답 디버깅 ===');\n  console.log('Release ID:', release.id);\n  console.log('API 데이터:', apiTestCasesResponse);\n  console.log('API 로딩 상태:', isLoading);\n  console.log('API 에러:', error);\n  console.log('API 데이터 타입:', typeof apiTestCasesResponse);\n  console.log('API 데이터 배열 여부:', Array.isArray(apiTestCasesResponse));\n  console.log('API 데이터 배열 여부:', Array.isArray(apiTestCasesResponse));\n  if (Array.isArray(apiTestCasesResponse)) {\n    console.log('API 데이터 길이:', apiTestCasesResponse.length);\n    console.log('첫 번째 아이템:', apiTestCasesResponse[0]);\n  }\n  const [updateExecutionStats] = useUpdateReleaseExecutionStatsMutation();\n  \n  // 실행 통계 데이터 가져오기 - 실시간 업데이트\n  const { data: executionStats, isLoading: statsLoading, error: statsError, refetch: refetchStats } = useGetReleaseExecutionStatsQuery(\n    release.id,\n    {\n      pollingInterval: 5000, // 5초마다 자동 갱신\n    }\n  );\n  \n  // 폴더 데이터 가져오기\n  const { data: folders = [] } = useGetTestFoldersQuery();\n  \n  // 가져온 폴더 데이터 가져오기 (DB에서)\n  const { data: dbImportedFolders = [], refetch: refetchImportedFolders } = useGetImportedFoldersQuery(release.id);\n  const [addImportedFolders] = useAddImportedFoldersMutation();\n  const [removeImportedFolder] = useRemoveImportedFolderMutation();\n  \n    useEffect(() => {\n     if (Array.isArray(dbImportedFolders)) {\n       setImportedFolders(dbImportedFolders.map(folder => ({\n         id: folder.folderId,\n         name: folder.name,\n         parentId: folder.parentId,\n         testCaseCount: folder.testCaseCount,\n         children: []\n       })));\n     } else {\n       setImportedFolders([]);\n     }\n  }, [dbImportedFolders]);\n  \n  useEffect(() => {\n    const totalTestCasesFromFolders = importedFolders.reduce((total, folder) => {\n      return total + (folder.testCaseCount || 0);\n    }, 0);\n    \n    const currentPlannedCount = executionStats?.data?.planned || 0;\n    \n    // 가져온 폴더가 있는 경우에만 업데이트\n    if (totalTestCasesFromFolders !== currentPlannedCount) {\n      console.log(`plannedCount 업데이트: ${currentPlannedCount} -> ${totalTestCasesFromFolders}`);\n      updateExecutionStats({\n        releaseId: release.id,\n        plannedCount: totalTestCasesFromFolders\n      }).then(() => {\n        console.log('plannedCount 업데이트 완료');\n        refetchStats();\n      }).catch(error => {\n        console.error('plannedCount 업데이트 실패:', error);\n      });\n    }\n  }, [importedFolders, executionStats, release.id, updateExecutionStats, refetchStats]);\n\n  // 우측 패널 크기 조절 이벤트 핸들러\n  const handleDetailPanelResizeStart = (e: React.MouseEvent) => {\n    e.preventDefault();\n    setIsResizing(true);\n  };\n\n  const handleDetailPanelResizeMove = useCallback((e: MouseEvent) => {\n    if (!isResizing) return;\n    \n    const container = document.querySelector('.execution-container');\n    if (!container) return;\n    \n    const containerRect = container.getBoundingClientRect();\n    const newWidth = containerRect.right - e.clientX;\n    \n    // 최소/최대 너비 제한\n    if (newWidth >= 300 && newWidth <= 800) {\n      setDetailPanelWidth(newWidth);\n    }\n  }, [isResizing]);\n\n  const handleDetailPanelResizeEnd = useCallback(() => {\n    setIsResizing(false);\n  }, []);\n\n  // 좌측 패널 크기 조절 이벤트 핸들러\n  const handleLeftPanelResizeStart = (e: React.MouseEvent) => {\n    e.preventDefault();\n    setIsLeftPanelResizing(true);\n  };\n\n  const handleLeftPanelResizeMove = useCallback((e: MouseEvent) => {\n    if (!isLeftPanelResizing) return;\n    \n    const container = document.querySelector('.execution-container');\n    if (!container) return;\n    \n    const containerRect = container.getBoundingClientRect();\n    const newWidth = e.clientX - containerRect.left;\n    \n    // 최소 200px, 최대 500px로 제한\n    const clampedWidth = Math.max(200, Math.min(500, newWidth));\n    setLeftPanelWidth(clampedWidth);\n  }, [isLeftPanelResizing]);\n\n  const handleLeftPanelResizeEnd = useCallback(() => {\n    setIsLeftPanelResizing(false);\n  }, []);\n\n  useEffect(() => {\n    if (isResizing) {\n      document.addEventListener('mousemove', handleDetailPanelResizeMove);\n      document.addEventListener('mouseup', handleDetailPanelResizeEnd);\n      \n      return () => {\n        document.removeEventListener('mousemove', handleDetailPanelResizeMove);\n        document.removeEventListener('mouseup', handleDetailPanelResizeEnd);\n      };\n    }\n  }, [isResizing, handleDetailPanelResizeMove, handleDetailPanelResizeEnd]);\n\n  useEffect(() => {\n    if (isLeftPanelResizing) {\n      document.addEventListener('mousemove', handleLeftPanelResizeMove);\n      document.addEventListener('mouseup', handleLeftPanelResizeEnd);\n      \n      return () => {\n        document.removeEventListener('mousemove', handleLeftPanelResizeMove);\n        document.removeEventListener('mouseup', handleLeftPanelResizeEnd);\n      };\n    }\n  }, [isLeftPanelResizing, handleLeftPanelResizeMove, handleLeftPanelResizeEnd]);\n\n  // 진행률 계산 - 실제 API 데이터 사용\n  const totalTestCases = executionStats?.data?.planned || 0;\n  const executedTestCases = executionStats?.data?.executed || 0;\n  const passedTestCases = executionStats?.data?.passed || 0;\n  const failedTestCases = executionStats?.data?.failed || 0;\n  const blockedTestCases = executionStats?.data?.blocked || 0;\n  const skippedTestCases = executionStats?.data?.skipped || 0;\n  const notRunTestCases = totalTestCases - executedTestCases;\n\n  const progressPercentage = executionStats?.data?.passRate || 0;\n\n  // API에서 가져온 테스트케이스 사용 - API 응답 구조에 맞게 처리\n  const apiTestCasesArray = Array.isArray(apiTestCasesResponse) ? apiTestCasesResponse : [];\n  \n  // 로컬 스토리지 키\n  const LOCAL_STORAGE_KEY = `testCases_release_${release.id}`;\n  \n  // 로컬 스토리지에서 저장된 테스트케이스 불러오기\n  const getStoredTestCases = () => {\n    try {\n      const stored = localStorage.getItem(LOCAL_STORAGE_KEY);\n      return stored ? JSON.parse(stored) : null;\n    } catch (error) {\n      console.error('로컬 스토리지에서 테스트케이스 불러오기 실패:', error);\n      return null;\n    }\n  };\n  \n  // 로컬 스토리지에 테스트케이스 저장하기\n  const saveTestCasesToStorage = (testCases: any[]) => {\n    try {\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(testCases));\n      console.log('테스트케이스를 로컬 스토리지에 저장했습니다:', testCases.length, '개');\n    } catch (error) {\n      console.error('로컬 스토리지에 테스트케이스 저장 실패:', error);\n    }\n  };\n\n  // 로컬 스토리지에서 저장된 테스트케이스만 사용 (더미 데이터 제거)\n  const storedTestCases = getStoredTestCases();\n  \n  // 더미 데이터가 저장되어 있으면 삭제 (한 번만 실행)\n  useEffect(() => {\n    if (storedTestCases && storedTestCases.length > 0) {\n      const isDummyData = storedTestCases.some((testCase: any) => \n        testCase.id === '81' || testCase.id === '82' || \n        testCase.name === 'Test Case 1' || testCase.name === 'Test Case 2'\n      );\n      if (isDummyData) {\n        console.log('더미 데이터 감지, 로컬 스토리지 정리 중...');\n        localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    }\n  }, [LOCAL_STORAGE_KEY, storedTestCases]);\n  \n  // 더미 데이터 완전 제거 - API 데이터 또는 저장된 데이터만 사용\n  const dummyTestCases = [];\n  \n  // 데이터 우선순위: 1) 부모 props, 2) 저장된 데이터, 3) API 데이터\n  const allTestCases = testCases.length > 0 ? testCases : (storedTestCases && storedTestCases.length > 0 ? storedTestCases : apiTestCasesArray);\n  \n  console.log('=== 데이터 소스 확인 ===');\n  console.log('Props testCases:', testCases.length);\n  console.log('Stored testCases:', storedTestCases ? storedTestCases.length : 0);\n  console.log('API testCases:', apiTestCasesArray.length);\n  console.log('Final allTestCases:', allTestCases.length);\n  \n  // API 데이터가 변경될 때 로컬 상태 업데이트 (부모 데이터가 없을 때만)\n  useEffect(() => {\n    if (testCases.length === 0) {\n      if (storedTestCases && storedTestCases.length > 0) {\n        console.log('저장된 데이터 사용, 부모에게 전달:', storedTestCases.length, '개 테스트케이스');\n        setLocalTestCases(storedTestCases);\n        // 부모 컴포넌트에 저장된 데이터 전달\n        if (onTestCasesLoad) {\n          onTestCasesLoad(storedTestCases);\n        }\n      } else if (apiTestCasesArray.length > 0) {\n        console.log('API 데이터 업데이트, 부모에게 전달:', apiTestCasesArray.length, '개 테스트케이스');\n        setLocalTestCases(apiTestCasesArray);\n        // 부모 컴포넌트에 API 데이터 전달\n        if (onTestCasesLoad) {\n          onTestCasesLoad(apiTestCasesArray as any);\n        }\n      }\n    } else if (testCases.length > 0) {\n      console.log('부모 props 데이터 사용:', testCases.length, '개 테스트케이스');\n      setLocalTestCases(testCases);\n    }\n  }, [testCases, apiTestCasesArray, storedTestCases, onTestCasesLoad]);\n  \n  // 실제 렌더링에 사용할 테스트 케이스 (부모 props 우선)\n  const displayTestCases = testCases.length > 0 ? testCases : (localTestCases.length > 0 ? localTestCases : allTestCases);\n  \n  // 디버깅: 렌더링할 테스트 케이스 상태 확인\n  console.log('렌더링 테스트케이스:', {\n    propsTestCasesCount: testCases.length,\n    localTestCasesCount: localTestCases.length,\n    apiTestCasesCount: apiTestCasesArray.length,\n    displayTestCasesCount: displayTestCases.length,\n    firstTestCaseStatus: displayTestCases[0]?.status\n  });\n  \n  // 필터링된 테스트 케이스 - 로컬 상태 우선 사용\n  const filteredTestCases = displayTestCases.filter((testCase: any) => {\n    if (filters.status && testCase.status !== filters.status) return false;\n    if (filters.priority && testCase.priority !== filters.priority) return false;\n    if (filters.suite && testCase.suite !== filters.suite) return false;\n    if (filters.assignee && testCase.assignee !== filters.assignee) return false;\n    if (filters.search && !(testCase.name || testCase.title)?.toLowerCase().includes(filters.search.toLowerCase())) return false;\n    return true;\n  });\n\n  // 테스트 케이스 선택 처리\n  const handleTestCaseSelect = useCallback((testCaseId: string, isSelected: boolean) => {\n    if (isSelected) {\n      setSelectedTestCases(prev => [...prev, testCaseId]);\n    } else {\n      setSelectedTestCases(prev => prev.filter(id => id !== testCaseId));\n    }\n  }, []);\n\n  // 전체 선택/해제\n  const handleSelectAll = useCallback((isSelected: boolean) => {\n    if (isSelected) {\n      setSelectedTestCases(filteredTestCases.map((tc: any) => tc.id));\n    } else {\n      setSelectedTestCases([]);\n    }\n  }, [filteredTestCases]);\n\n  // API 훅 추가\n  const [updateTestCaseStatus] = useUpdateTestCaseStatusMutation();\n\n  // 드롭다운 위치 계산 함수 - 임시로 항상 아래쪽으로 열리도록 설정\n  const calculateDropdownPosition = useCallback((testCaseId: string, buttonElement: HTMLElement): 'top' | 'bottom' => {\n    // 임시로 항상 아래쪽으로 열리도록 설정 (클릭 문제 해결을 위해)\n    console.log('드롭다운 위치: 항상 아래쪽으로 열림 (임시 설정)');\n    return 'bottom';\n  }, []);\n\n  // 드롭다운 토글 처리\n  const toggleDropdown = useCallback((testCaseId: string, buttonElement?: HTMLElement) => {\n    const isCurrentlyOpen = openDropdowns[testCaseId];\n    \n    if (!isCurrentlyOpen && buttonElement) {\n      // 드롭다운을 열 때 위치 계산 및 저장\n      const rect = buttonElement.getBoundingClientRect();\n      const position = calculateDropdownPosition(testCaseId, buttonElement);\n      \n      setDropdownRects(prev => ({\n        ...prev,\n        [testCaseId]: rect\n      }));\n      \n      setDropdownPositions(prev => ({\n        ...prev,\n        [testCaseId]: position\n      }));\n    }\n    \n    setOpenDropdowns(prev => ({\n      ...prev,\n      [testCaseId]: !prev[testCaseId]\n    }));\n  }, [openDropdowns, calculateDropdownPosition]);\n\n  // 드롭다운 닫기\n  const closeDropdown = useCallback((testCaseId: string) => {\n    setOpenDropdowns(prev => ({\n      ...prev,\n      [testCaseId]: false\n    }));\n  }, []);\n\n  // 간단한 상태 변경 처리\n  const handleStatusChange = useCallback(async (testCaseId: string, newStatus: string) => {\n    try {\n      console.log('=== 간단한 상태 변경 시작 ===');\n      console.log('테스트케이스 ID:', testCaseId);\n      console.log('새로운 상태:', newStatus);\n      console.log('현재 선택된 폴더:', selectedImportedFolder?.name);\n\n      // 즉시 부모 컴포넌트 상태 업데이트\n      onTestCaseUpdate(testCaseId, {\n        status: newStatus as TestCase['status'],\n        lastUpdated: new Date().toISOString()\n      });\n\n      // 선택된 테스트케이스가 변경된 경우 상태 업데이트\n      if (selectedTestCase?.id === testCaseId) {\n        setSelectedTestCase({\n          ...selectedTestCase,\n          status: newStatus as TestCase['status'],\n          lastUpdated: new Date().toISOString()\n        });\n      }\n\n      // 폴더 선택 상태인 경우 folderTestCases도 즉시 업데이트\n      if (selectedImportedFolder) {\n        setFolderTestCases(prev => \n          prev.map(tc => \n            tc.id === testCaseId \n              ? { ...tc, status: newStatus as TestCase['status'], lastUpdated: new Date().toISOString() }\n              : tc\n          )\n        );\n        console.log('폴더 테스트케이스 상태 즉시 업데이트 완료');\n      }\n\n      // API 호출 (백그라운드)\n      try {\n        const result = await updateTestCaseStatus({\n          releaseId: release.id,\n          testCaseId,\n          status: newStatus,\n          comment: currentComment\n        }).unwrap();\n\n        console.log('API 호출 성공:', result);\n        \n        // 데이터 새로고침\n        await refetch();\n        await refetchStats();\n        \n        // 폴더 선택 상태인 경우 폴더 데이터도 새로고침하되, 로컬 상태 업데이트를 유지\n        if (selectedImportedFolder) {\n          try {\n            const response = await fetch(`http://localhost:3001/api/releases/folders/${selectedImportedFolder.id}/testcases`);\n            if (response.ok) {\n              const data = await response.json();\n              const updatedFolderTestCases = data.data || [];\n              \n              // 새로고침된 데이터에 로컬 상태 업데이트를 병합\n              const mergedTestCases = updatedFolderTestCases.map((tc: any) => {\n                // 현재 로컬 상태에서 해당 테스트케이스 찾기\n                const localTestCase = folderTestCases.find((localTc: any) => localTc.id === tc.id);\n                // 로컬 상태가 더 최신이면 로컬 상태 사용, 아니면 서버 상태 사용\n                return localTestCase && localTestCase.lastUpdated > tc.lastUpdated \n                  ? localTestCase \n                  : tc;\n              });\n              \n              setFolderTestCases(mergedTestCases);\n              console.log('폴더 테스트케이스 새로고침 및 병합 완료:', mergedTestCases.length, '개');\n            }\n          } catch (error) {\n            console.error('폴더 테스트케이스 새로고침 실패:', error);\n          }\n        }\n      } catch (apiError) {\n        console.error('API 호출 실패:', apiError);\n        alert(`상태 변경에 실패했습니다: ${apiError}`);\n      }\n\n      console.log('=== 상태 변경 완료 ===');\n    } catch (error) {\n      console.error('=== 상태 변경 실패 ===');\n      console.error('Error details:', error);\n      alert(`상태 변경에 실패했습니다: ${error}`);\n    }\n  }, [updateTestCaseStatus, release.id, onTestCaseUpdate, selectedTestCase, currentComment, refetch, refetchStats, selectedImportedFolder, folderTestCases]);\n\n\n\n  // 외부 클릭 시 드롭다운 닫기\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as Element;\n      if (!target.closest('[data-dropdown]')) {\n        setOpenDropdowns({});\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // 일괄 상태 변경\n  const handleBulkStatusChange = useCallback((status: TestCase['status']) => {\n    if (selectedTestCases.length === 0) return;\n    \n    onBulkUpdate(selectedTestCases, { \n      status,\n      lastUpdated: new Date().toISOString()\n    });\n    \n    setSelectedTestCases([]);\n  }, [selectedTestCases, onBulkUpdate]);\n\n  // 테스트 케이스 클릭 처리\n  const handleTestCaseClick = useCallback((testCase: TestCase) => {\n    setSelectedTestCase(testCase);\n  }, []);\n\n  const handleFetchTestCases = useCallback(() => {\n    setShowTestCaseModal(true);\n  }, []);\n\n  // 선택된 폴더들의 모든 테스트케이스 추가\n  const handleAddSelectedFolders = useCallback(async () => {\n    if (selectedTestCasesToAdd.length === 0) return;\n    \n    setIsLoadingTestCases(true);\n    try {\n      // 선택된 폴더들을 가져온 폴더 목록에 추가 (하위 폴더 제외)\n      const selectedFolderObjects = Array.isArray(folders) ? folders.filter(folder => \n        selectedTestCasesToAdd.includes(folder.id.toString())\n      ) : [];\n      \n      // 각 폴더의 실제 테스트케이스 개수를 가져와서 업데이트\n      const foldersWithRealCounts = await Promise.all(\n        selectedFolderObjects.map(async (folder) => {\n          try {\n            // 실제 API 호출로 테스트케이스 개수 가져오기\n            const response = await fetch(`http://localhost:3001/api/releases/folders/${folder.id}/testcases`);\n            if (response.ok) {\n              const data = await response.json();\n              return {\n                ...folder,\n                testCaseCount: data.data?.length || 0\n              };\n            }\n          } catch (error) {\n            console.error(`폴더 ${folder.id} 테스트케이스 조회 실패:`, error);\n          }\n          return folder;\n        })\n      );\n      \n      // 중복 제거하여 가져온 폴더 목록에 추가\n      const existingIds = new Set(importedFolders.map((f: any) => f.id));\n      const newFolders = foldersWithRealCounts.filter((f: any) => !existingIds.has(f.id));\n      \n      // DB에 폴더 추가\n      if (newFolders.length > 0) {\n        const foldersToAdd = newFolders.map(folder => ({\n          folder_id: folder.id,\n          folder_name: folder.name,\n          parent_id: folder.parentId || null,\n          test_case_count: folder.testCaseCount || 0\n        }));\n        \n        await addImportedFolders({\n          releaseId: release.id,\n          folders: foldersToAdd\n        });\n        \n        // 로컬 상태 업데이트\n        setImportedFolders(prev => [...prev, ...newFolders]);\n      }\n      \n\n      \n      // 선택된 모든 폴더의 테스트케이스를 실제로 가져와서 릴리즈에 추가\n      const allTestCaseIds = [];\n      for (const folder of selectedFolderObjects) {\n        try {\n          const response = await fetch(`http://localhost:3001/api/releases/folders/${folder.id}/testcases`);\n          if (response.ok) {\n            const data = await response.json();\n            if (data.data && Array.isArray(data.data)) {\n              // 테스트케이스 ID들을 수집\n              const testCaseIds = data.data.map((tc: any) => tc.id);\n              allTestCaseIds.push(...testCaseIds);\n            }\n          }\n        } catch (error) {\n          console.error(`폴더 ${folder.id} 테스트케이스 조회 실패:`, error);\n        }\n      }\n      \n      // 릴리즈에 테스트케이스 추가\n      if (allTestCaseIds.length > 0) {\n        try {\n          const addResponse = await fetch(`http://localhost:3001/api/releases/${release.id}/testcases`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              testCaseIds: allTestCaseIds\n            })\n          });\n\n          if (addResponse.ok) {\n            const addResult = await addResponse.json();\n            \n            // 성공 후 모달 닫기 및 선택 초기화\n            setShowTestCaseModal(false);\n            setSelectedTestCasesToAdd([]);\n            \n            // 데이터 새로고침\n            await refetch();\n            await refetchImportedFolders();\n          } else {\n            console.error('테스트케이스 릴리즈 추가 실패:', addResponse.statusText);\n          }\n        } catch (error) {\n          console.error('테스트케이스 릴리즈 추가 실패:', error);\n        }\n      }\n    } catch (error) {\n      console.error('테스트케이스 추가 실패:', error);\n    } finally {\n      setIsLoadingTestCases(false);\n    }\n  }, [selectedTestCasesToAdd, folders, release.id, refetch]);\n\n  // 폴더의 모든 하위 폴더 ID를 재귀적으로 가져오기\n  const getAllSubFolderIds = useCallback((folder: any): number[] => {\n    let ids = [folder.id];\n    if (folder.children) {\n      folder.children.forEach((child: any) => {\n        ids = [...ids, ...getAllSubFolderIds(child)];\n      });\n    }\n    return ids;\n  }, []);\n\n  // 폴더 선택 (하위 폴더 자동 선택 없음)\n  const handleFolderSelection = useCallback((folder: any, isSelected: boolean) => {\n    if (isSelected) {\n      setSelectedTestCasesToAdd(prev => [...new Set([...prev, folder.id])]);\n    } else {\n      setSelectedTestCasesToAdd(prev => prev.filter(id => id !== folder.id));\n    }\n  }, []);\n\n  // 접기/펼치기 기능\n  const handleToggleCollapse = useCallback(() => {\n    setIsCollapsed(prev => !prev);\n  }, []);\n\n  // 가져온 폴더 삭제\n  const handleRemoveImportedFolder = useCallback(async (folderId: number) => {\n    try {\n      // 해당 폴더의 테스트케이스들을 릴리즈에서 제거\n      const folder = importedFolders.find((f: any) => f.id === folderId);\n      if (folder) {\n        try {\n          // 폴더의 테스트케이스들을 가져와서 릴리즈에서 제거\n          const response = await fetch(`http://localhost:3001/api/releases/folders/${folderId}/testcases`);\n          if (response.ok) {\n            const data = await response.json();\n            if (data.data && Array.isArray(data.data)) {\n              const testCaseIds = data.data.map((tc: any) => tc.id);\n              \n              // 릴리즈에서 테스트케이스 제거\n              if (testCaseIds.length > 0) {\n                await fetch(`http://localhost:3001/api/releases/${release.id}/testcases`, {\n                  method: 'DELETE',\n                  headers: {\n                    'Content-Type': 'application/json',\n                  },\n                  body: JSON.stringify({\n                    testCaseIds: testCaseIds\n                  })\n                });\n              }\n            }\n          }\n        } catch (error) {\n          console.error('폴더 테스트케이스 제거 실패:', error);\n        }\n      }\n      \n      // DB에서 폴더 제거\n      await removeImportedFolder({\n        releaseId: release.id,\n        folderId: folderId\n      });\n      \n      // 로컬 상태 업데이트\n      setImportedFolders(prev => {\n        const updatedFolders = prev.filter((f: any) => f.id !== folderId);\n        \n        // plannedCount 즉시 업데이트\n        const totalTestCasesFromFolders = updatedFolders.reduce((total, folder) => {\n          return total + (folder.testCaseCount || 0);\n        }, 0);\n        \n        // 실행 통계 업데이트 (비동기)\n        updateExecutionStats({\n          releaseId: release.id,\n          plannedCount: totalTestCasesFromFolders\n        }).then(() => {\n          // 통계 업데이트 후 즉시 새로고침\n          refetchStats();\n        }).catch(error => {\n          console.error('실행 통계 업데이트 실패:', error);\n        });\n        \n        return updatedFolders;\n      });\n      \n      // 삭제된 폴더가 현재 선택된 폴더였다면 선택 해제\n      if (selectedImportedFolder?.id === folderId) {\n        setSelectedImportedFolder(null);\n        setFolderTestCases([]);\n      }\n    } catch (error) {\n      console.error('폴더 제거 실패:', error);\n    }\n  }, [selectedImportedFolder, removeImportedFolder, release.id, importedFolders, updateExecutionStats, refetchStats]);\n\n  // 가져온 폴더 클릭 처리\n  const handleImportedFolderClick = useCallback(async (folder: any) => {\n    setSelectedImportedFolder(folder);\n    \n    try {\n      // 해당 폴더의 테스트 케이스 가져오기\n      const response = await fetch(`http://localhost:3001/api/releases/folders/${folder.id}/testcases`);\n      if (response.ok) {\n        const data = await response.json();\n        const testCases = data.data || [];\n        setFolderTestCases(testCases);\n        \n        setImportedFolders(prev => prev.map(f => \n          f.id === folder.id ? { ...f, testCaseCount: testCases.length } : f\n        ));\n      } else {\n        console.error('폴더 테스트 케이스 조회 실패:', response.statusText);\n        setFolderTestCases([]);\n      }\n    } catch (error) {\n      console.error('폴더 테스트 케이스 조회 실패:', error);\n      setFolderTestCases([]);\n    }\n  }, []);\n\n  // 폴더 배열을 트리 구조로 변환하는 함수\n  const buildFolderTree = useCallback((folders: any[]): any[] => {\n    const folderMap = new Map();\n    const rootFolders: any[] = [];\n\n    // 모든 폴더를 Map에 저장\n    folders.forEach(folder => {\n      folderMap.set(folder.id, { ...folder, children: [] });\n    });\n\n    // 부모-자식 관계 설정\n    folders.forEach(folder => {\n      const folderNode = folderMap.get(folder.id);\n      if (folder.parentId === null) {\n        // 루트 폴더\n        rootFolders.push(folderNode);\n      } else {\n        // 하위 폴더\n        const parentNode = folderMap.get(folder.parentId);\n        if (parentNode) {\n          parentNode.children.push(folderNode);\n        }\n      }\n    });\n\n    return rootFolders;\n  }, []);\n\n  // 폴더 트리 렌더링 컴포넌트 (모달용)\n  const renderFolderTree = useCallback((folders: any[], level: number = 0) => {\n    if (!Array.isArray(folders)) {\n      console.warn('folders is not an array:', folders);\n      return null;\n    }\n    return folders.map((folder) => (\n      <div key={folder.id}>\n        <ImportFolderItem \n          level={level}\n          $isSelected={selectedTestCasesToAdd.includes(folder.id)}\n          onClick={() => handleFolderSelection(folder, !selectedTestCasesToAdd.includes(folder.id))}\n        >\n          <ImportFolderCheckbox\n            type=\"checkbox\"\n            checked={selectedTestCasesToAdd.includes(folder.id)}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleFolderSelection(folder, e.target.checked)}\n            onClick={(e: React.MouseEvent) => e.stopPropagation()}\n          />\n          <ImportFolderIcon />\n          <ImportTextContainer>\n            <ImportFolderName>{folder.name}</ImportFolderName>\n            <ImportTestCaseCount>({folder.testCaseCount}개)</ImportTestCaseCount>\n          </ImportTextContainer>\n        </ImportFolderItem>\n        \n        {folder.children && folder.children.length > 0 && (\n          <ImportFolderChildren>\n            {renderFolderTree(folder.children, level + 1)}\n          </ImportFolderChildren>\n        )}\n      </div>\n    ));\n  }, [selectedTestCasesToAdd, handleFolderSelection]);\n\n  // 가져온 폴더 트리 렌더링 컴포넌트 (좌측 패널용)\n  const renderImportedFolderTree = useCallback((folders: any[], level: number = 0) => {\n    if (!Array.isArray(folders)) {\n      console.warn('folders is not an array:', folders);\n      return null;\n    }\n    return folders.map((folder) => (\n      <div key={folder.id}>\n        <ImportFolderItem \n          level={level}\n          $isSelected={selectedImportedFolder?.id === folder.id}\n          onClick={() => handleImportedFolderClick(folder)}\n        >\n          <ImportFolderIcon />\n          <ImportTextContainer>\n            <ImportFolderName>{folder.name}</ImportFolderName>\n            <ImportTestCaseCount>({folder.testCaseCount}개)</ImportTestCaseCount>\n          </ImportTextContainer>\n          <ImportRemoveButton\n            onClick={(e: React.MouseEvent) => {\n              e.stopPropagation();\n              handleRemoveImportedFolder(folder.id);\n            }}\n          >\n            ×\n          </ImportRemoveButton>\n        </ImportFolderItem>\n        \n        {folder.children && folder.children.length > 0 && (\n          <ImportFolderChildren>\n            {renderImportedFolderTree(folder.children, level + 1)}\n          </ImportFolderChildren>\n        )}\n      </div>\n    ));\n  }, [handleRemoveImportedFolder, handleImportedFolderClick, selectedImportedFolder]);\n\n  return (\n    <ExecutionContainer className=\"execution-container\">\n      {/* 상단 컨텍스트 바 - 새로운 디자인 */}\n      <TopContextBar isCollapsed={isCollapsed}>\n        <ReleaseMeta isCollapsed={isCollapsed}>\n          <ReleaseLeft>\n            <ReleaseInfo isCollapsed={isCollapsed}>\n              <ReleaseNameContainer>\n                <ReleaseName isCollapsed={isCollapsed}>{release.name}</ReleaseName>\n                <LiveIndicator $isLive={isLive}>\n                  <LiveDot $isLive={isLive} />\n                  {isLive ? 'LIVE' : 'OFFLINE'}\n                </LiveIndicator>\n              </ReleaseNameContainer>\n              <ReleaseDetails isCollapsed={isCollapsed}>\n                <ReleaseDetailItem>v{release.version}</ReleaseDetailItem>\n                {release.sprint && <ReleaseDetailItem>Sprint {release.sprint}</ReleaseDetailItem>}\n                {release.period && <ReleaseDetailItem>{release.period}</ReleaseDetailItem>}\n                <ReleaseDetailItem>{release.owner}</ReleaseDetailItem>\n                <ReleaseDetailItem>{new Date(release.createdAt).toLocaleDateString('ko-KR')}</ReleaseDetailItem>\n              </ReleaseDetails>\n            </ReleaseInfo>\n          </ReleaseLeft>\n          \n          <ReleaseRight>\n            <ActionButton \n              onClick={handleFetchTestCases}\n              disabled={isLoadingTestCases}\n            >\n              {isLoadingTestCases ? '가져오는 중...' : '테스트케이스 가져오기'}\n            </ActionButton>\n            <CollapseButton isCollapsed={isCollapsed} onClick={handleToggleCollapse}>\n              {isCollapsed ? '펼치기' : '접기'}\n            </CollapseButton>\n          </ReleaseRight>\n        </ReleaseMeta>\n\n        <ProgressSummary isCollapsed={isCollapsed}>\n          <ProgressItem>\n            <ProgressNumber color=\"#3b82f6\">{totalTestCases}</ProgressNumber>\n            <ProgressLabel color=\"#3b82f6\">PLANNED</ProgressLabel>\n          </ProgressItem>\n          <ProgressItem>\n            <ProgressNumber color=\"#8b5cf6\">{executedTestCases}</ProgressNumber>\n            <ProgressLabel color=\"#8b5cf6\">EXECUTED</ProgressLabel>\n          </ProgressItem>\n          <ProgressItem>\n            <ProgressNumber color=\"#10b981\">{passedTestCases}</ProgressNumber>\n            <ProgressLabel color=\"#10b981\">PASS</ProgressLabel>\n          </ProgressItem>\n          <ProgressItem>\n            <ProgressNumber color=\"#ef4444\">{failedTestCases}</ProgressNumber>\n            <ProgressLabel color=\"#ef4444\">FAIL</ProgressLabel>\n          </ProgressItem>\n          <ProgressItem>\n            <ProgressNumber color=\"#f59e0b\">{blockedTestCases}</ProgressNumber>\n            <ProgressLabel color=\"#f59e0b\">BLOCK</ProgressLabel>\n          </ProgressItem>\n          <ProgressItem>\n            <ProgressNumber color=\"#6b7280\">{skippedTestCases}</ProgressNumber>\n            <ProgressLabel color=\"#6b7280\">SKIP</ProgressLabel>\n          </ProgressItem>\n          \n          <ProgressBar>\n            <ProgressFill percentage={progressPercentage} />\n          </ProgressBar>\n          \n          <ProgressItem>\n            <ProgressNumber color=\"#059669\">{progressPercentage.toFixed(1)}%</ProgressNumber>\n            <ProgressLabel color=\"#059669\">PROGRESS</ProgressLabel>\n          </ProgressItem>\n        </ProgressSummary>\n\n        <FilterSummary isCollapsed={isCollapsed}>\n          {filters.status && <FilterBadge>Status: {filters.status}</FilterBadge>}\n          {filters.priority && <FilterBadge>Priority: {filters.priority}</FilterBadge>}\n          {filters.suite && <FilterBadge>Suite: {filters.suite}</FilterBadge>}\n          {filters.assignee && <FilterBadge>Assignee: {filters.assignee}</FilterBadge>}\n          {filters.search && <FilterBadge>Search: \"{filters.search}\"</FilterBadge>}\n          {selectedTestCases.length > 0 && (\n            <FilterBadge>{selectedTestCases.length} selected</FilterBadge>\n          )}\n        </FilterSummary>\n      </TopContextBar>\n\n      {/* 메인 콘텐츠 영역 - 하단 패널은 항상 표시 */}\n      <MainContent>\n        {/* 좌측 테스트케이스 폴더 패널 */}\n        <FilterPanel width={leftPanelWidth}>\n          <LeftPanelResizeHandle onMouseDown={handleLeftPanelResizeStart} />\n          <FilterSection>\n            <FilterTitle>가져온 테스트케이스 폴더</FilterTitle>\n            \n            {importedFolders.length > 0 ? (\n              <div>\n                <div style={{ marginBottom: '16px' }}>\n                  <button \n                    onClick={() => setShowTestCaseModal(true)}\n                    style={{\n                      padding: '8px 16px',\n                      background: '#3b82f6',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '6px',\n                      cursor: 'pointer',\n                      fontSize: '12px'\n                    }}\n                  >\n                    + 폴더 추가\n                  </button>\n                </div>\n                <FolderList>\n                  {renderImportedFolderTree(buildFolderTree(importedFolders))}\n                </FolderList>\n              </div>\n            ) : (\n              <div style={{ \n                padding: '20px', \n                textAlign: 'center', \n                color: '#6b7280',\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n                height: '100%',\n                minHeight: '400px',\n                flex: '1'\n              }}>\n                가져온 테스트케이스가 없습니다.\n                <br />\n                <button \n                  onClick={() => setShowTestCaseModal(true)}\n                  style={{\n                    marginTop: '10px',\n                    padding: '8px 16px',\n                    background: '#3b82f6',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '6px',\n                    cursor: 'pointer'\n                  }}\n                >\n                  테스트케이스 가져오기\n                </button>\n              </div>\n            )}\n          </FilterSection>\n\n          <SavedFilters>\n            <FilterTitle>Saved Views</FilterTitle>\n            <SavedFilterItem>\n              <span>My Default View</span>\n            </SavedFilterItem>\n            <SavedFilterItem>\n              <span>High Priority Tests</span>\n            </SavedFilterItem>\n            <SavedFilterItem>\n              <span>Failed Tests</span>\n            </SavedFilterItem>\n          </SavedFilters>\n\n          {selectedTestCases.length > 0 && (\n            <BulkActionPanel>\n              <FilterTitle>Bulk Actions</FilterTitle>\n              <BulkActionButton\n                variant=\"pass\"\n                onClick={() => handleBulkStatusChange('Pass')}\n              >\n                Mark All as Pass\n              </BulkActionButton>\n              <BulkActionButton\n                variant=\"fail\"\n                onClick={() => handleBulkStatusChange('Fail')}\n              >\n                Mark All as Fail\n              </BulkActionButton>\n              <BulkActionButton\n                variant=\"block\"\n                onClick={() => handleBulkStatusChange('Block')}\n              >\n                Mark All as Block\n              </BulkActionButton>\n              <BulkActionButton\n                variant=\"skip\"\n                onClick={() => handleBulkStatusChange('Skip')}\n              >\n                Mark All as Skip\n              </BulkActionButton>\n            </BulkActionPanel>\n          )}\n        </FilterPanel>\n\n        {/* 중앙 테스트 리스트 */}\n        <TestListContainer>\n          <TestListHeader>\n            <TestListTitle>\n              {selectedImportedFolder \n                ? `${selectedImportedFolder.name} 폴더의 테스트 케이스 (${folderTestCases.length}개)`\n                : `Test Cases (${filteredTestCases.length} of ${totalTestCases})`\n              }\n            </TestListTitle>\n          </TestListHeader>\n\n          <TestTable>\n            <TableHeader>\n              <div>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedTestCases.length === (selectedImportedFolder ? folderTestCases : filteredTestCases).length && (selectedImportedFolder ? folderTestCases : filteredTestCases).length > 0}\n                  onChange={(e) => handleSelectAll(e.target.checked)}\n                />\n              </div>\n              <div>Status</div>\n              <div>Priority</div>\n              <div>Test Case</div>\n              <div>Suite</div>\n              <div>Module</div>\n              <div>Assignee</div>\n              <div>Last Result</div>\n              <div>Actions</div>\n            </TableHeader>\n\n            {(selectedImportedFolder ? folderTestCases : filteredTestCases).map((testCase: any) => (\n              <TableRow\n                key={testCase.id}\n                isSelected={selectedTestCases.includes(testCase.id)}\n                status={testCase.status}\n                onClick={() => handleTestCaseClick(testCase)}\n              >\n                <TableCell>\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedTestCases.includes(testCase.id)}\n                    onChange={(e) => handleTestCaseSelect(testCase.id, e.target.checked)}\n                    onClick={(e) => e.stopPropagation()}\n                  />\n                </TableCell>\n                <TableCell>\n                  <StatusBadge status={testCase.status}>\n                    {testCase.status}\n                  </StatusBadge>\n                </TableCell>\n                <TableCell>\n                  <PriorityBadge priority={testCase.priority}>\n                    {testCase.priority}\n                  </PriorityBadge>\n                </TableCell>\n                <TableCell>\n                  <div>\n                    <div style={{ fontWeight: 500 }}>{testCase.name || testCase.title}</div>\n                    <div style={{ fontSize: 12, color: '#64748b' }}>\n                      {(testCase.description || '').substring(0, 60)}...\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>{testCase.suite || '-'}</TableCell>\n                <TableCell>{testCase.module || '-'}</TableCell>\n                <TableCell>{testCase.assignee || '-'}</TableCell>\n                <TableCell>\n                  {testCase.lastUpdated ? new Date(testCase.lastUpdated).toLocaleDateString() : '-'}\n                </TableCell>\n                <TableCell>\n                  <SimpleStatusDropdown\n                    testCaseId={testCase.id}\n                    currentStatus={testCase.status || 'Inactive'}\n                    onStatusChange={handleStatusChange}\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TestTable>\n        </TestListContainer>\n\n        {/* 우측 상세 패널 */}\n        <DetailPanel isOpen={!!selectedTestCase} width={detailPanelWidth} onMouseDown={handleDetailPanelResizeStart}>\n          <DetailHeader>\n            <DetailHeaderTitle>Test Case Details</DetailHeaderTitle>\n            <CloseButton onClick={() => setSelectedTestCase(null)}>×</CloseButton>\n          </DetailHeader>\n          <ResizeHandle onMouseDown={handleDetailPanelResizeStart} />\n          <DetailContent onMouseUp={handleDetailPanelResizeEnd} onMouseLeave={handleDetailPanelResizeEnd}>\n            {selectedTestCase && (\n              <>\n                <DetailSection>\n                  <DetailTitle>Overview</DetailTitle>\n                  \n                  {/* 제목과 상태 */}\n                  <SimpleHeader>\n                    <SimpleTitle>{selectedTestCase.title || selectedTestCase.name}</SimpleTitle>\n                    <SimpleStatus status={selectedTestCase.status}>{selectedTestCase.status}</SimpleStatus>\n                  </SimpleHeader>\n\n                  {/* 기본 정보 */}\n                  <SimpleInfo>\n                    <SimpleInfoItem>\n                      <SimpleLabel>ID:</SimpleLabel>\n                      <SimpleValue>#{selectedTestCase.id}</SimpleValue>\n                    </SimpleInfoItem>\n                    <SimpleInfoItem>\n                      <SimpleLabel>Priority:</SimpleLabel>\n                      <SimpleValue priority={selectedTestCase.priority}>{selectedTestCase.priority}</SimpleValue>\n                    </SimpleInfoItem>\n                    <SimpleInfoItem>\n                      <SimpleLabel>Author:</SimpleLabel>\n                      <SimpleValue>{selectedTestCase.createdBy || 'admin'}</SimpleValue>\n                    </SimpleInfoItem>\n                  </SimpleInfo>\n\n                  {/* 설명 */}\n                  <SimpleSection>\n                    <SimpleLabel>Description</SimpleLabel>\n                    <SimpleText>{selectedTestCase.description || '설명이 없습니다.'}</SimpleText>\n                  </SimpleSection>\n\n                  {/* 사전 조건 */}\n                  <SimpleSection>\n                    <SimpleLabel>Prerequisites</SimpleLabel>\n                    <SimpleText>{selectedTestCase.prereq || '사전 조건이 없습니다.'}</SimpleText>\n                  </SimpleSection>\n\n                  {/* 테스트 단계 */}\n                  <SimpleSection>\n                    <SimpleLabel>Test Steps</SimpleLabel>\n                    <SimpleSteps>\n                      {(() => {\n                        let stepsArray: string[] = [];\n                        if (selectedTestCase.steps) {\n                          if (Array.isArray(selectedTestCase.steps)) {\n                            stepsArray = selectedTestCase.steps;\n                          } else if (typeof selectedTestCase.steps === 'string') {\n                            try {\n                              stepsArray = JSON.parse(selectedTestCase.steps);\n                            } catch (e) {\n                              stepsArray = [selectedTestCase.steps];\n                            }\n                          }\n                        }\n                        \n                        if (stepsArray.length > 0) {\n                          return stepsArray.map((step: string, index: number) => (\n                            <SimpleStep key={index}>\n                              <SimpleStepNumber>{index + 1}.</SimpleStepNumber>\n                              <SimpleStepText>{step}</SimpleStepText>\n                            </SimpleStep>\n                          ));\n                        } else {\n                          return (\n                            <SimpleStep>\n                              <SimpleStepNumber>1.</SimpleStepNumber>\n                              <SimpleStepText>No steps defined</SimpleStepText>\n                            </SimpleStep>\n                          );\n                        }\n                      })()}\n                    </SimpleSteps>\n                  </SimpleSection>\n\n                  {/* 예상 결과 */}\n                  <SimpleSection>\n                    <SimpleLabel>Expected Result</SimpleLabel>\n                    <SimpleText>{selectedTestCase.expected || selectedTestCase.expectedResult || '예상 결과가 없습니다.'}</SimpleText>\n                  </SimpleSection>\n                </DetailSection>\n\n                {selectedTestCase.steps && (\n                  <DetailSection>\n                    <DetailTitle>Steps</DetailTitle>\n                    <DetailText>\n                      {(() => {\n                        let stepsArray: string[] = [];\n                        if (selectedTestCase.steps) {\n                          if (Array.isArray(selectedTestCase.steps)) {\n                            stepsArray = selectedTestCase.steps;\n                          } else if (typeof selectedTestCase.steps === 'string') {\n                            try {\n                              stepsArray = JSON.parse(selectedTestCase.steps);\n                            } catch (e) {\n                              stepsArray = [selectedTestCase.steps];\n                            }\n                          }\n                        }\n                        return stepsArray.join('\\n');\n                      })()}\n                    </DetailText>\n                  </DetailSection>\n                )}\n\n                {selectedTestCase.expectedResult && (\n                  <DetailSection>\n                    <DetailTitle>Expected Result</DetailTitle>\n                    <DetailText>{selectedTestCase.expectedResult}</DetailText>\n                  </DetailSection>\n                )}\n\n                <DetailSection>\n                  <DetailTitle>Run Test</DetailTitle>\n                  <StatusChangeForm>\n                    <StatusRadioGroup>\n                      {(['Pass', 'Fail', 'Blocked', 'Skip'] as const).map((status) => (\n                        <StatusRadio key={status}>\n                          <input\n                            type=\"radio\"\n                            name=\"status\"\n                            value={status}\n                            checked={selectedTestCase.status === status}\n                            onChange={(e) => {\n                              console.log('라디오 버튼 클릭:', status);\n                              if (e.target.checked) {\n                                handleStatusChange(selectedTestCase.id, status);\n                              }\n                            }}\n                          />\n                          <StatusBadge status={status}>{status}</StatusBadge>\n                        </StatusRadio>\n                      ))}\n                    </StatusRadioGroup>\n                    \n                    <FilterLabel>Comment (Optional)</FilterLabel>\n                    <CommentTextarea \n                      placeholder=\"Add a comment about this test execution...\"\n                      value={currentComment}\n                      onChange={(e) => setCurrentComment(e.target.value)}\n                    />\n                    \n                    <SaveButton \n                      onClick={() => {\n                        if (currentComment.trim()) {\n                          // 댓글이 있으면 현재 상태로 다시 저장\n                          handleStatusChange(selectedTestCase.id, selectedTestCase.status || 'Inactive');\n                        } else {\n                          // 댓글이 없으면 그냥 패널 닫기\n                          setSelectedTestCase(null);\n                        }\n                      }}\n                    >\n                      {currentComment.trim() ? 'Save with Comment' : 'Close'}\n                    </SaveButton>\n                  </StatusChangeForm>\n                </DetailSection>\n\n                <DetailSection>\n                  <DetailTitle>History</DetailTitle>\n                  <HistoryList>\n                    <HistoryItem>\n                      <HistoryMeta>\n                        <span>John Doe</span>\n                        <span>2024-01-15 14:30</span>\n                      </HistoryMeta>\n                      <HistoryChange>Status changed from Not Run to Pass</HistoryChange>\n                    </HistoryItem>\n                    <HistoryItem>\n                      <HistoryMeta>\n                        <span>Jane Smith</span>\n                        <span>2024-01-14 16:45</span>\n                      </HistoryMeta>\n                      <HistoryChange>Status changed from Pass to Fail</HistoryChange>\n                    </HistoryItem>\n                  </HistoryList>\n                </DetailSection>\n              </>\n            )}\n          </DetailContent>\n        </DetailPanel>\n      </MainContent>\n\n      {/* 테스트케이스 선택 모달 */}\n\n      {showTestCaseModal && (\n        <ModalOverlay onClick={() => setShowTestCaseModal(false)}>\n          <ModalContent onClick={(e) => e.stopPropagation()}>\n            <ModalHeader>\n              <ModalTitle>테스트케이스 가져오기</ModalTitle>\n              <CloseButton onClick={() => setShowTestCaseModal(false)}>×</CloseButton>\n            </ModalHeader>\n            \n            <ModalBody>\n              <div style={{ padding: '20px' }}>\n                <h3 style={{ marginBottom: '16px', textAlign: 'center' }}>테스트 관리에서 폴더 선택</h3>\n                <p style={{ marginBottom: '16px', color: '#6b7280', textAlign: 'center' }}>\n                  가져올 폴더를 선택하세요. 각 폴더를 개별적으로 선택할 수 있습니다.\n                </p>\n                <FolderList>\n                  {Array.isArray(folders) ? renderFolderTree(buildFolderTree(folders)) : (\n                    <div style={{ textAlign: 'center', padding: '20px', color: '#6b7280' }}>\n                      {isLoading ? '폴더 목록을 불러오는 중...' : '폴더 목록을 불러올 수 없습니다.'}\n                    </div>\n                  )}\n                </FolderList>\n              </div>\n            </ModalBody>\n            \n            <ModalFooter>\n              <CancelButton onClick={() => setShowTestCaseModal(false)}>\n                취소\n              </CancelButton>\n              <AddButton \n                onClick={handleAddSelectedFolders}\n                disabled={selectedTestCasesToAdd.length === 0 || isLoadingTestCases}\n              >\n                {isLoadingTestCases ? '추가 중...' : `선택된 ${selectedTestCasesToAdd.length}개 폴더 추가`}\n              </AddButton>\n            </ModalFooter>\n          </ModalContent>\n        </ModalOverlay>\n      )}\n\n\n    </ExecutionContainer>\n  );\n};\n\nexport default ExecutionView;\n"],"version":3}