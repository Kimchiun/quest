{"file":"/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/src/renderer/shared/components/EditableCell.tsx","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/src/renderer/shared/components/EditableCell.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport styled from 'styled-components';\n\ninterface EditableCellProps {\n  value: string | number | boolean;\n  type?: 'text' | 'select' | 'checkbox';\n  options?: { value: string; label: string }[];\n  onSave: (value: string | number | boolean) => void;\n  onCancel?: () => void;\n  placeholder?: string;\n  disabled?: boolean;\n  className?: string;\n}\n\nconst CellContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n`;\n\nconst DisplayValue = styled.div`\n  padding: 8px 12px;\n  border: 2px solid transparent;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    border-color: #e2e8f0;\n    background-color: #f8fafc;\n  }\n  \n  &.editing {\n    border-color: #3b82f6;\n    background-color: #eff6ff;\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 8px 12px;\n  border: 2px solid #3b82f6;\n  border-radius: 4px;\n  font-size: inherit;\n  font-family: inherit;\n  outline: none;\n  background-color: white;\n  \n  &:focus {\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  padding: 8px 12px;\n  border: 2px solid #3b82f6;\n  border-radius: 4px;\n  font-size: inherit;\n  font-family: inherit;\n  outline: none;\n  background-color: white;\n  cursor: pointer;\n  \n  &:focus {\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n`;\n\nconst Checkbox = styled.input`\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  accent-color: #3b82f6;\n`;\n\nconst SaveIndicator = styled.div`\n  position: absolute;\n  top: -20px;\n  right: 0;\n  background-color: #10b981;\n  color: white;\n  padding: 2px 6px;\n  border-radius: 4px;\n  font-size: 12px;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n  \n  &.saving {\n    opacity: 1;\n  }\n`;\n\nconst EditableCell: React.FC<EditableCellProps> = ({\n  value,\n  type = 'text',\n  options = [],\n  onSave,\n  onCancel,\n  placeholder = '',\n  disabled = false,\n  className = ''\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editValue, setEditValue] = useState(value);\n  const [isSaving, setIsSaving] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const selectRef = useRef<HTMLSelectElement>(null);\n  const saveTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined);\n\n  // 편집 모드 진입\n  const startEditing = useCallback(() => {\n    if (disabled) return;\n    setIsEditing(true);\n    setEditValue(value);\n  }, [disabled, value]);\n\n  // 편집 모드 종료\n  const stopEditing = useCallback(() => {\n    setIsEditing(false);\n    setIsSaving(false);\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current);\n    }\n  }, []);\n\n  // 저장 실행\n  const saveValue = useCallback(() => {\n    if (editValue !== value) {\n      setIsSaving(true);\n      onSave(editValue);\n      \n      // 저장 완료 표시 후 숨김\n      setTimeout(() => {\n        setIsSaving(false);\n      }, 1000);\n    }\n    stopEditing();\n  }, [editValue, value, onSave, stopEditing]);\n\n  // 취소\n  const cancelEdit = useCallback(() => {\n    setEditValue(value);\n    stopEditing();\n    onCancel?.();\n  }, [value, stopEditing, onCancel]);\n\n  // 자동저장 (debounce)\n  const debouncedSave = useCallback(() => {\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current);\n    }\n    \n    saveTimeoutRef.current = setTimeout(() => {\n      if (editValue !== value) {\n        setIsSaving(true);\n        onSave(editValue);\n        setTimeout(() => setIsSaving(false), 1000);\n      }\n    }, 500);\n  }, [editValue, value, onSave]);\n\n  // 키보드 이벤트 처리\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      saveValue();\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      cancelEdit();\n    }\n  }, [saveValue, cancelEdit]);\n\n  // 값 변경 시 자동저장\n  useEffect(() => {\n    if (isEditing && editValue !== value) {\n      debouncedSave();\n    }\n  }, [editValue, isEditing, value, debouncedSave]);\n\n  // 포커스 관리\n  useEffect(() => {\n    if (isEditing) {\n      if (type === 'select' && selectRef.current) {\n        selectRef.current.focus();\n      } else if (inputRef.current) {\n        inputRef.current.focus();\n        inputRef.current.select();\n      }\n    }\n  }, [isEditing, type]);\n\n  // 값 변경 시 편집값 동기화\n  useEffect(() => {\n    if (!isEditing) {\n      setEditValue(value);\n    }\n  }, [value, isEditing]);\n\n  // 렌더링 함수들\n  const renderDisplayValue = () => {\n    if (type === 'checkbox') {\n      return (\n        <Checkbox\n          type=\"checkbox\"\n          checked={Boolean(value)}\n          onChange={(e) => onSave(e.target.checked)}\n          disabled={disabled}\n        />\n      );\n    }\n    \n    if (type === 'select') {\n      const option = options.find(opt => opt.value === String(value));\n      return option?.label || String(value);\n    }\n    \n    return String(value);\n  };\n\n  const renderEditInput = () => {\n    if (type === 'select') {\n      return (\n        <Select\n          ref={selectRef}\n          value={String(editValue)}\n          onChange={(e) => setEditValue(e.target.value)}\n          onKeyDown={handleKeyDown}\n          onBlur={saveValue}\n        >\n          {options.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </Select>\n      );\n    }\n    \n    if (type === 'checkbox') {\n      return (\n        <Checkbox\n          type=\"checkbox\"\n          checked={Boolean(editValue)}\n          onChange={(e) => setEditValue(e.target.checked)}\n          onKeyDown={handleKeyDown}\n          onBlur={saveValue}\n        />\n      );\n    }\n    \n    return (\n      <Input\n        ref={inputRef}\n        type=\"text\"\n        value={String(editValue)}\n        onChange={(e) => setEditValue(e.target.value)}\n        onKeyDown={handleKeyDown}\n        onBlur={saveValue}\n        placeholder={placeholder}\n      />\n    );\n  };\n\n  return (\n    <CellContainer className={className}>\n      {isEditing ? (\n        renderEditInput()\n      ) : (\n        <DisplayValue\n          onClick={startEditing}\n          className={isEditing ? 'editing' : ''}\n        >\n          {renderDisplayValue()}\n        </DisplayValue>\n      )}\n      \n      <SaveIndicator className={isSaving ? 'saving' : ''}>\n        저장됨\n      </SaveIndicator>\n    </CellContainer>\n  );\n};\n\nexport default EditableCell; "],"version":3}