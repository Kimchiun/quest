{"file":"/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/tests/testcase.repository.test.ts","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/tests/testcase.repository.test.ts"],"sourcesContent":["import { createTestCase, getTestCaseById, updateTestCase, deleteTestCase, listTestCases, createTestCaseVersion, listTestCaseVersions } from '../src/main/app/domains/testcases/repositories/testCaseRepository';\nimport pgClient, { ensurePgConnected } from '../src/main/app/infrastructure/database/pgClient';\n\ndescribe('TestCaseRepository', () => {\n  let testcaseId: number;\n  beforeAll(async () => {\n    await ensurePgConnected();\n    if (pgClient) {\n      await pgClient.query('DELETE FROM testcase_versions');\n      await pgClient.query('DELETE FROM testcases');\n    }\n  });\n\n  it('createTestCase & getTestCaseById', async () => {\n    const tc = await createTestCase({\n      title: 'TC1',\n      prereq: 'none',\n      steps: ['step1', 'step2'],\n      expected: 'ok',\n      priority: 'High',\n      tags: ['smoke'],\n      status: 'Active',\n      createdBy: 'tester',\n    });\n    testcaseId = tc.id;\n    expect(tc.title).toBe('TC1');\n    const found = await getTestCaseById(tc.id);\n    expect(found?.id).toBe(tc.id);\n  });\n\n  it('updateTestCase', async () => {\n    const updated = await updateTestCase(testcaseId, { title: 'TC1-upd', steps: ['step1'], status: 'Deprecated' });\n    expect(updated?.title).toBe('TC1-upd');\n    expect(updated?.status).toBe('Deprecated');\n  });\n\n  it('listTestCases', async () => {\n    const list = await listTestCases();\n    expect(list.length).toBeGreaterThan(0);\n  });\n\n  it('createTestCaseVersion & listTestCaseVersions', async () => {\n    const v = await createTestCaseVersion({\n      testcaseId,\n      version: 1,\n      data: { title: 'TC1', prereq: 'none', steps: ['step1', 'step2'], expected: 'ok', priority: 'High', tags: ['smoke'], status: 'Active', createdBy: 'tester' },\n      createdBy: 'tester',\n    });\n    expect(v.version).toBe(1);\n    const versions = await listTestCaseVersions(testcaseId);\n    expect(versions.length).toBeGreaterThan(0);\n  });\n\n  it('deleteTestCase', async () => {\n    const ok = await deleteTestCase(testcaseId);\n    expect(ok).toBe(true);\n    const found = await getTestCaseById(testcaseId);\n    expect(found).toBeNull();\n  });\n\n  afterAll(async () => {\n    if (pgClient) {\n      await pgClient.query('DELETE FROM testcase_versions');\n      await pgClient.query('DELETE FROM testcases');\n      await pgClient.end();\n    }\n  });\n}); "],"version":3}