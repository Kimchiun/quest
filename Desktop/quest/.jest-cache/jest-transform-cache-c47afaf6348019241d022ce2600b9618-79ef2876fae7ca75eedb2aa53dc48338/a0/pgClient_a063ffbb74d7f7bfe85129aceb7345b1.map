{"file":"/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/src/main/app/infrastructure/database/pgClient.ts","mappings":";;AAsBA,8CAQC;AAED,4CAUC;AAED,kCAEC;AA9CD,2BAA4B;AAE5B,IAAI,QAAQ,GAAkB,IAAI,CAAC;AACnC,IAAI,WAAW,GAAG,KAAK,CAAC;AAExB,SAAS,YAAY;IACjB,MAAM,MAAM,GAAG;QACX,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,UAAU;QACtC,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,WAAW;QACvC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,MAAM;QAC1C,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU;QAChC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,IAAI;KAC3C,CAAC;IAEF,2DAA2D;IAC3D,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QACnB,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAC;IAChC,CAAC;IAED,OAAO,IAAI,WAAM,CAAC,MAAM,CAAC,CAAC;AAC9B,CAAC;AAEM,KAAK,UAAU,iBAAiB;IACnC,IAAI,CAAC,WAAW,EAAE,CAAC;QACf,IAAI,CAAC,QAAQ,EAAE,CAAC;YACZ,QAAQ,GAAG,YAAY,EAAE,CAAC;QAC9B,CAAC;QACD,MAAM,QAAQ,CAAC,OAAO,EAAE,CAAC;QACzB,WAAW,GAAG,IAAI,CAAC;IACvB,CAAC;AACL,CAAC;AAEM,KAAK,UAAU,gBAAgB;IAClC,IAAI,CAAC;QACD,MAAM,iBAAiB,EAAE,CAAC;QAC1B,IAAI,QAAQ,EAAE,CAAC;YACX,MAAM,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QACzC,CAAC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACX,OAAO,KAAK,CAAC;IACjB,CAAC;AACL,CAAC;AAED,SAAgB,WAAW;IACvB,OAAO,QAAQ,CAAC;AACpB,CAAC;AAED,kBAAe,QAAQ,CAAC;AAExB,kBAAkB;AAClB,uBAAuB;AACvB,2BAA2B;AAC3B,0CAA0C;AAC1C,oCAAoC;AACpC,+BAA+B;AAC/B,mDAAmD;AACnD,MAAM","names":[],"sources":["/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/src/main/app/infrastructure/database/pgClient.ts"],"sourcesContent":["import { Client } from 'pg';\n\nlet pgClient: Client | null = null;\nlet isConnected = false;\n\nfunction createClient() {\n    const config = {\n        user: process.env.PGUSER || 'postgres',\n        host: process.env.PGHOST || 'localhost',\n        database: process.env.PGDATABASE || 'itms',\n        password: process.env.PGPASSWORD,\n        port: Number(process.env.PGPORT) || 5432,\n    };\n\n    // 비밀번호가 설정되지 않은 경우 undefined로 설정 (macOS에서는 비밀번호 없이도 접속 가능)\n    if (!config.password) {\n        config.password = undefined;\n    }\n\n    return new Client(config);\n}\n\nexport async function ensurePgConnected() {\n    if (!isConnected) {\n        if (!pgClient) {\n            pgClient = createClient();\n        }\n        await pgClient.connect();\n        isConnected = true;\n    }\n}\n\nexport async function testPgConnection() {\n    try {\n        await ensurePgConnected();\n        if (pgClient) {\n            await pgClient.query('SELECT NOW()');\n        }\n        return true;\n    } catch (err) {\n        return false;\n    }\n}\n\nexport function getPgClient() {\n    return pgClient;\n}\n\nexport default pgClient;\n\n// users 테이블 생성 예시\n// CREATE TABLE users (\n//   id SERIAL PRIMARY KEY,\n//   username VARCHAR(64) UNIQUE NOT NULL,\n//   password VARCHAR(128) NOT NULL,\n//   role VARCHAR(16) NOT NULL,\n//   created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n// ); "],"version":3}