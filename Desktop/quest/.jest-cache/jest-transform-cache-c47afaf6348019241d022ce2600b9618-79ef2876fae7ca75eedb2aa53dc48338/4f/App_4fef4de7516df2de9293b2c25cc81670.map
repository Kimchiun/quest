{"file":"/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/src/renderer/app/App.tsx","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/src/renderer/app/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Route, Routes, Link, useNavigate, Navigate } from 'react-router-dom';\nimport { Provider, useSelector, useDispatch } from 'react-redux';\nimport { store, RootState, setMe } from '../store';\n\n// import FolderManagementPage from '../features/FolderManagement/components/FolderManagementPage';\nimport TestManagementV2Page from '../features/TestManagementV2/TestManagementV2Page';\n\nimport ReleaseManagementV2Page from '../features/ReleaseManagementV2/ReleaseManagementV2Page';\n\nimport NotificationBadge from '../features/ExecutionManagement/components/NotificationBadge';\nimport { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport { theme } from '../shared/theme';\nimport GlobalStyle from '../shared/GlobalStyle';\nimport Icon from '../shared/components/Icon';\nimport LoginPage from '../features/Login/LoginPage';\nimport UserFlowManager from '../features/UserFlow/components/UserFlowManager';\nimport AccessibilityManager from '../features/Accessibility/components/AccessibilityManager';\nimport FeedbackCollector from '../features/Feedback/components/FeedbackCollector';\nimport { LayoutProvider } from '../shared/components/Layout/LayoutContext';\nimport GlobalLayout from '../shared/components/Layout/GlobalLayout';\nimport ResponsiveLayout from '../shared/components/Layout/ResponsiveLayout';\nimport ToastContainer from '../shared/components/Toast/ToastContainer';\nimport ConnectionStatusIndicator from '../shared/components/ConnectionStatus';\nimport { testBackendConnection, logConnectionStatus } from '../utils/connectionTest';\n\nconst SkipLinkStyle = createGlobalStyle`\n  .skip-link {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n    z-index: 10000;\n    background: #2563eb;\n    color: #fff;\n    font-weight: bold;\n    border-radius: 4px;\n    padding: 8px 16px;\n    transition: left 0.2s;\n  }\n  .skip-link:focus {\n    left: 16px;\n    top: 16px;\n    width: auto;\n    height: auto;\n    outline: 2px solid #fff;\n  }\n`;\n\nconst AppRoutes: React.FC<{ isLoggedIn: boolean; onLogin: () => void }> = ({ isLoggedIn, onLogin }) => {\n  const navigate = useNavigate();\n  \n  if (!isLoggedIn) {\n    return (\n      <>\n        <a href=\"#main-content\" className=\"skip-link\">Î≥∏Î¨∏ Î∞îÎ°úÍ∞ÄÍ∏∞</a>\n        <main id=\"main-content\" role=\"main\" aria-label=\"Ï£ºÏöî Ïª®ÌÖêÏ∏†\">\n          <Routes>\n            <Route path=\"/login\" element={<LoginPage onLogin={() => { onLogin(); navigate('/dashboard'); }} />} />\n            <Route path=\"*\" element={<Navigate to=\"/login\" replace />} />\n          </Routes>\n        </main>\n      </>\n    );\n  }\n\n  return (\n    <LayoutProvider>\n      <GlobalLayout>\n        <ResponsiveLayout>\n          <a href=\"#main-content\" className=\"skip-link\">Î≥∏Î¨∏ Î∞îÎ°úÍ∞ÄÍ∏∞</a>\n          <UserFlowManager />\n          <AccessibilityManager />\n          <FeedbackCollector />\n          <Routes>\n            <Route path=\"/dashboard\" element={<div>ÎåÄÏãúÎ≥¥ÎìúÎäî Ï¢åÏ∏° ÎÑ§ÎπÑÍ≤åÏù¥ÏÖòÏóêÏÑú Ï†ëÍ∑ºÌïòÏÑ∏Ïöî.</div>} />\n\n            <Route path=\"/test-management-v2\" element={<TestManagementV2Page />} />\n            <Route path=\"/release-management-v2\" element={<ReleaseManagementV2Page />} />\n\n            {/* <Route path=\"/folder-management\" element={<FolderManagementPage />} /> */}\n\n            <Route path=\"/\" element={<Navigate to=\"/dashboard\" replace />} />\n          </Routes>\n        </ResponsiveLayout>\n      </GlobalLayout>\n    </LayoutProvider>\n  );\n};\n\nconst AppInner: React.FC = () => {\n  const user = useSelector((state: RootState) => state.users.me);\n  const dispatch = useDispatch();\n  const isLoggedIn = !!user;\n  const [autoLoginAttempted, setAutoLoginAttempted] = React.useState(false);\n  \n  // sessionStorageÏóêÏÑú ÏûÑÏãú ÌÜ†ÌÅ∞ Î≥µÏõê\n  useEffect(() => {\n    const tempToken = sessionStorage.getItem('tempToken');\n    if (tempToken && !isLoggedIn) {\n      console.log('üîë ÏûÑÏãú ÌÜ†ÌÅ∞ Î≥µÏõê Ï§ë...');\n      localStorage.setItem('token', tempToken);\n      sessionStorage.removeItem('tempToken');\n      console.log('‚úÖ ÏûÑÏãú ÌÜ†ÌÅ∞ Î≥µÏõê ÏôÑÎ£å');\n    }\n  }, [isLoggedIn]);\n  \n  // Í∞úÎ∞ú ÌôòÍ≤ΩÏóêÏÑú MSWÎ•º ÌÜµÌïú ÏûêÎèô Î°úÍ∑∏Ïù∏\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'development' && !isLoggedIn && !autoLoginAttempted) {\n      console.log('üîß Í∞úÎ∞ú ÌôòÍ≤Ω ÏûêÎèô Î°úÍ∑∏Ïù∏ ÏãúÎèÑ...');\n      setAutoLoginAttempted(true);\n      \n      const autoLoginWithMSW = async () => {\n        try {\n          console.log('üîÑ ÏûêÎèô Î°úÍ∑∏Ïù∏ ÏöîÏ≤≠ ÏãúÏûë...');\n          const requestBody = {\n            username: 'admin@test.com',\n            password: 'password123'\n          };\n          console.log('üì§ ÏöîÏ≤≠ Î≥∏Î¨∏:', JSON.stringify(requestBody, null, 2));\n          \n          // MSWÎ•º ÌÜµÌï¥ Î°úÍ∑∏Ïù∏ ÏãúÎèÑ\n          const loginResponse = await fetch('http://localhost:3000/api/auth/login', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(requestBody)\n          });\n          \n          console.log('üì• ÏùëÎãµ ÏÉÅÌÉú:', loginResponse.status, loginResponse.statusText);\n          console.log('üì• ÏùëÎãµ Ìó§Îçî:', Object.fromEntries(loginResponse.headers.entries()));\n          \n          if (loginResponse.ok) {\n            const data = await loginResponse.json();\n            console.log('üì• ÏùëÎãµ Îç∞Ïù¥ÌÑ∞:', data);\n            if (data.user) {\n              dispatch(setMe(data.user));\n              console.log('‚úÖ ÏûêÎèô Î°úÍ∑∏Ïù∏ ÏÑ±Í≥µ:', data.user);\n            }\n          } else {\n            const errorText = await loginResponse.text();\n            console.log('‚ùå ÏûêÎèô Î°úÍ∑∏Ïù∏ Ïã§Ìå®. ÏùëÎãµ:', errorText);\n            console.log('‚ö†Ô∏è ÏûêÎèô Î°úÍ∑∏Ïù∏ Ïã§Ìå®. Î°úÍ∑∏Ïù∏ ÌéòÏù¥ÏßÄÎ•º ÌëúÏãúÌï©ÎãàÎã§.');\n          }\n        } catch (error) {\n          console.log('‚ùå ÏûêÎèô Î°úÍ∑∏Ïù∏ Ïó∞Í≤∞ Ïã§Ìå®:', error);\n        }\n      };\n      \n      // 1Ï¥à ÌõÑÏóê ÏûêÎèô Î°úÍ∑∏Ïù∏ Ïã§Ìñâ\n      setTimeout(autoLoginWithMSW, 1000);\n    }\n  }, [isLoggedIn, dispatch, autoLoginAttempted]);\n  \n  // Ïï± ÏãúÏûë Ïãú Î∞±ÏóîÎìú Ïó∞Í≤∞ ÌÖåÏä§Ìä∏\n  useEffect(() => {\n    const testConnection = async () => {\n      console.log('üîó Î∞±ÏóîÎìú Ïó∞Í≤∞ ÌÖåÏä§Ìä∏ ÏãúÏûë...');\n      const status = await testBackendConnection();\n      logConnectionStatus(status);\n      \n      if (!status.backend) {\n        console.error('‚ö†Ô∏è Î∞±ÏóîÎìú ÏÑúÎ≤ÑÍ∞Ä Ïã§ÌñâÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.');\n        console.log('üí° Îã§Ïùå Î™ÖÎ†πÏñ¥Î°ú Î∞±ÏóîÎìúÎ•º ÏãúÏûëÌïòÏÑ∏Ïöî:');\n        console.log('   npm run dev:backend');\n      }\n    };\n    \n    // 3Ï¥à ÌõÑÏóê Ïó∞Í≤∞ ÌÖåÏä§Ìä∏ Ïã§Ìñâ (ÏÑúÎ≤Ñ ÏãúÏûë ÏãúÍ∞Ñ Í≥†Î†§)\n    const timer = setTimeout(testConnection, 3000);\n    \n    return () => clearTimeout(timer);\n  }, []);\n  \n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <SkipLinkStyle />\n      <Router>\n        <AppRoutes isLoggedIn={isLoggedIn} onLogin={() => {}} />\n      </Router>\n      {/* Toast ÏïåÎ¶º ÏãúÏä§ÌÖú */}\n      <ToastContainer />\n      {/* Ïó∞Í≤∞ ÏÉÅÌÉú ÌëúÏãúÍ∏∞ */}\n      <ConnectionStatusIndicator />\n    </ThemeProvider>\n  );\n};\n\nconst App: React.FC = () => (\n  <Provider store={store}>\n    <AppInner />\n  </Provider>\n);\n\nexport default App; "],"version":3}