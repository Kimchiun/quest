b055432334237bf8b893c096ce792afb
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createJiraIssue = createJiraIssue;
const axios_1 = __importDefault(require("axios"));
async function createJiraIssue(params) {
    const { summary, description, projectKey, issueType = 'Bug', jiraUrl, username, apiToken, timeoutMs = 8000, } = params;
    try {
        const res = await axios_1.default.post(`${jiraUrl}/rest/api/2/issue`, {
            fields: {
                project: { key: projectKey },
                summary,
                description,
                issuetype: { name: issueType },
            },
        }, {
            auth: { username, password: apiToken },
            timeout: timeoutMs,
            headers: { 'Content-Type': 'application/json' },
        });
        return {
            key: res.data.key,
            url: `${jiraUrl}/browse/${res.data.key}`,
        };
    }
    catch (err) {
        if (err.code === 'ECONNABORTED') {
            throw new Error('Jira API request timed out');
        }
        throw new Error(err.response?.data?.errorMessages?.[0] || err.message || 'Jira issue creation failed');
    }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzLzNpLWExLTIwMjEtMDE3L0RvY3VtZW50cy9xdWVzdC9EZXNrdG9wL3F1ZXN0L3NyYy9tYWluL2FwcC9pbmZyYXN0cnVjdHVyZS9pbnRlZ3JhdGlvbnMvamlyYUNsaWVudC50cyIsIm1hcHBpbmdzIjoiOzs7OztBQWFBLDBDQXNDQztBQW5ERCxrREFBMEI7QUFhbkIsS0FBSyxVQUFVLGVBQWUsQ0FBQyxNQUF1QjtJQUN6RCxNQUFNLEVBQ0YsT0FBTyxFQUNQLFdBQVcsRUFDWCxVQUFVLEVBQ1YsU0FBUyxHQUFHLEtBQUssRUFDakIsT0FBTyxFQUNQLFFBQVEsRUFDUixRQUFRLEVBQ1IsU0FBUyxHQUFHLElBQUksR0FDbkIsR0FBRyxNQUFNLENBQUM7SUFDWCxJQUFJLENBQUM7UUFDRCxNQUFNLEdBQUcsR0FBRyxNQUFNLGVBQUssQ0FBQyxJQUFJLENBQ3hCLEdBQUcsT0FBTyxtQkFBbUIsRUFDN0I7WUFDSSxNQUFNLEVBQUU7Z0JBQ0osT0FBTyxFQUFFLEVBQUUsR0FBRyxFQUFFLFVBQVUsRUFBRTtnQkFDNUIsT0FBTztnQkFDUCxXQUFXO2dCQUNYLFNBQVMsRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7YUFDakM7U0FDSixFQUNEO1lBQ0ksSUFBSSxFQUFFLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUU7WUFDdEMsT0FBTyxFQUFFLFNBQVM7WUFDbEIsT0FBTyxFQUFFLEVBQUUsY0FBYyxFQUFFLGtCQUFrQixFQUFFO1NBQ2xELENBQ0osQ0FBQztRQUNGLE9BQU87WUFDSCxHQUFHLEVBQUcsR0FBRyxDQUFDLElBQVksQ0FBQyxHQUFHO1lBQzFCLEdBQUcsRUFBRSxHQUFHLE9BQU8sV0FBWSxHQUFHLENBQUMsSUFBWSxDQUFDLEdBQUcsRUFBRTtTQUNwRCxDQUFDO0lBQ04sQ0FBQztJQUFDLE9BQU8sR0FBUSxFQUFFLENBQUM7UUFDaEIsSUFBSSxHQUFHLENBQUMsSUFBSSxLQUFLLGNBQWMsRUFBRSxDQUFDO1lBQzlCLE1BQU0sSUFBSSxLQUFLLENBQUMsNEJBQTRCLENBQUMsQ0FBQztRQUNsRCxDQUFDO1FBQ0QsTUFBTSxJQUFJLEtBQUssQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLElBQUksRUFBRSxhQUFhLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxHQUFHLENBQUMsT0FBTyxJQUFJLDRCQUE0QixDQUFDLENBQUM7SUFDM0csQ0FBQztBQUNMLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzLzNpLWExLTIwMjEtMDE3L0RvY3VtZW50cy9xdWVzdC9EZXNrdG9wL3F1ZXN0L3NyYy9tYWluL2FwcC9pbmZyYXN0cnVjdHVyZS9pbnRlZ3JhdGlvbnMvamlyYUNsaWVudC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEppcmFJc3N1ZVBhcmFtcyB7XG4gICAgc3VtbWFyeTogc3RyaW5nO1xuICAgIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gICAgcHJvamVjdEtleTogc3RyaW5nO1xuICAgIGlzc3VlVHlwZT86IHN0cmluZztcbiAgICBqaXJhVXJsOiBzdHJpbmc7XG4gICAgdXNlcm5hbWU6IHN0cmluZztcbiAgICBhcGlUb2tlbjogc3RyaW5nO1xuICAgIHRpbWVvdXRNcz86IG51bWJlcjtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUppcmFJc3N1ZShwYXJhbXM6IEppcmFJc3N1ZVBhcmFtcyk6IFByb21pc2U8eyBrZXk6IHN0cmluZzsgdXJsOiBzdHJpbmcgfT4ge1xuICAgIGNvbnN0IHtcbiAgICAgICAgc3VtbWFyeSxcbiAgICAgICAgZGVzY3JpcHRpb24sXG4gICAgICAgIHByb2plY3RLZXksXG4gICAgICAgIGlzc3VlVHlwZSA9ICdCdWcnLFxuICAgICAgICBqaXJhVXJsLFxuICAgICAgICB1c2VybmFtZSxcbiAgICAgICAgYXBpVG9rZW4sXG4gICAgICAgIHRpbWVvdXRNcyA9IDgwMDAsXG4gICAgfSA9IHBhcmFtcztcbiAgICB0cnkge1xuICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBheGlvcy5wb3N0KFxuICAgICAgICAgICAgYCR7amlyYVVybH0vcmVzdC9hcGkvMi9pc3N1ZWAsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgZmllbGRzOiB7XG4gICAgICAgICAgICAgICAgICAgIHByb2plY3Q6IHsga2V5OiBwcm9qZWN0S2V5IH0sXG4gICAgICAgICAgICAgICAgICAgIHN1bW1hcnksXG4gICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgICAgICAgICAgICAgICBpc3N1ZXR5cGU6IHsgbmFtZTogaXNzdWVUeXBlIH0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgYXV0aDogeyB1c2VybmFtZSwgcGFzc3dvcmQ6IGFwaVRva2VuIH0sXG4gICAgICAgICAgICAgICAgdGltZW91dDogdGltZW91dE1zLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAga2V5OiAocmVzLmRhdGEgYXMgYW55KS5rZXksXG4gICAgICAgICAgICB1cmw6IGAke2ppcmFVcmx9L2Jyb3dzZS8keyhyZXMuZGF0YSBhcyBhbnkpLmtleX1gLFxuICAgICAgICB9O1xuICAgIH0gY2F0Y2ggKGVycjogYW55KSB7XG4gICAgICAgIGlmIChlcnIuY29kZSA9PT0gJ0VDT05OQUJPUlRFRCcpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSmlyYSBBUEkgcmVxdWVzdCB0aW1lZCBvdXQnKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyLnJlc3BvbnNlPy5kYXRhPy5lcnJvck1lc3NhZ2VzPy5bMF0gfHwgZXJyLm1lc3NhZ2UgfHwgJ0ppcmEgaXNzdWUgY3JlYXRpb24gZmFpbGVkJyk7XG4gICAgfVxufSAiXSwidmVyc2lvbiI6M30=