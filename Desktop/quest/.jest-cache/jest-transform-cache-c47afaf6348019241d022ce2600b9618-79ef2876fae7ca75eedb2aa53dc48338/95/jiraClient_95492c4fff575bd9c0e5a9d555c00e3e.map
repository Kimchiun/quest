{"file":"/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/src/main/app/infrastructure/integrations/jiraClient.ts","mappings":";;;;;AAaA,0CAsCC;AAnDD,kDAA0B;AAanB,KAAK,UAAU,eAAe,CAAC,MAAuB;IACzD,MAAM,EACF,OAAO,EACP,WAAW,EACX,UAAU,EACV,SAAS,GAAG,KAAK,EACjB,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,SAAS,GAAG,IAAI,GACnB,GAAG,MAAM,CAAC;IACX,IAAI,CAAC;QACD,MAAM,GAAG,GAAG,MAAM,eAAK,CAAC,IAAI,CACxB,GAAG,OAAO,mBAAmB,EAC7B;YACI,MAAM,EAAE;gBACJ,OAAO,EAAE,EAAE,GAAG,EAAE,UAAU,EAAE;gBAC5B,OAAO;gBACP,WAAW;gBACX,SAAS,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;aACjC;SACJ,EACD;YACI,IAAI,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE;YACtC,OAAO,EAAE,SAAS;YAClB,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE;SAClD,CACJ,CAAC;QACF,OAAO;YACH,GAAG,EAAG,GAAG,CAAC,IAAY,CAAC,GAAG;YAC1B,GAAG,EAAE,GAAG,OAAO,WAAY,GAAG,CAAC,IAAY,CAAC,GAAG,EAAE;SACpD,CAAC;IACN,CAAC;IAAC,OAAO,GAAQ,EAAE,CAAC;QAChB,IAAI,GAAG,CAAC,IAAI,KAAK,cAAc,EAAE,CAAC;YAC9B,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;QAClD,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,OAAO,IAAI,4BAA4B,CAAC,CAAC;IAC3G,CAAC;AACL,CAAC","names":[],"sources":["/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/src/main/app/infrastructure/integrations/jiraClient.ts"],"sourcesContent":["import axios from 'axios';\n\nexport interface JiraIssueParams {\n    summary: string;\n    description: string;\n    projectKey: string;\n    issueType?: string;\n    jiraUrl: string;\n    username: string;\n    apiToken: string;\n    timeoutMs?: number;\n}\n\nexport async function createJiraIssue(params: JiraIssueParams): Promise<{ key: string; url: string }> {\n    const {\n        summary,\n        description,\n        projectKey,\n        issueType = 'Bug',\n        jiraUrl,\n        username,\n        apiToken,\n        timeoutMs = 8000,\n    } = params;\n    try {\n        const res = await axios.post(\n            `${jiraUrl}/rest/api/2/issue`,\n            {\n                fields: {\n                    project: { key: projectKey },\n                    summary,\n                    description,\n                    issuetype: { name: issueType },\n                },\n            },\n            {\n                auth: { username, password: apiToken },\n                timeout: timeoutMs,\n                headers: { 'Content-Type': 'application/json' },\n            }\n        );\n        return {\n            key: (res.data as any).key,\n            url: `${jiraUrl}/browse/${(res.data as any).key}`,\n        };\n    } catch (err: any) {\n        if (err.code === 'ECONNABORTED') {\n            throw new Error('Jira API request timed out');\n        }\n        throw new Error(err.response?.data?.errorMessages?.[0] || err.message || 'Jira issue creation failed');\n    }\n} "],"version":3}