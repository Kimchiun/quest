{"file":"/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/tests/ExecutionView.test.tsx","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/tests/ExecutionView.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport { Provider } from 'react-redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport ExecutionView from '../src/renderer/features/ReleaseManagementV2/components/ExecutionView';\nimport { api } from '../src/renderer/services/api';\n\n// Mock API responses\nconst mockApiTestCases = {\n  data: [\n    {\n      id: '81',\n      title: 'Test Case 1',\n      description: 'Test description 1',\n      status: 'Inactive',\n      priority: 'High',\n      steps: '[\"Step 1\", \"Step 2\"]',\n      expected: 'Expected result 1',\n      createdBy: 'admin',\n      createdAt: '2024-01-01T00:00:00Z',\n      updatedAt: '2024-01-01T00:00:00Z'\n    },\n    {\n      id: '82',\n      title: 'Test Case 2',\n      description: 'Test description 2',\n      status: 'Pass',\n      priority: 'Medium',\n      steps: '[\"Step 1\", \"Step 2\", \"Step 3\"]',\n      expected: 'Expected result 2',\n      createdBy: 'admin',\n      createdAt: '2024-01-01T00:00:00Z',\n      updatedAt: '2024-01-01T00:00:00Z'\n    }\n  ]\n};\n\nconst mockExecutionStats = {\n  data: {\n    total: 2,\n    passed: 1,\n    failed: 0,\n    blocked: 0,\n    skipped: 0,\n    planned: 2,\n    passRate: 50\n  }\n};\n\n// Mock store\nconst createMockStore = () => {\n  return configureStore({\n    reducer: {\n      [api.reducerPath]: api.reducer,\n    },\n    middleware: (getDefaultMiddleware) =>\n      getDefaultMiddleware().concat(api.middleware),\n  });\n};\n\n// Mock props\nconst mockRelease = {\n  id: 'test-release-id',\n  name: 'Test Release',\n  version: '1.0.0',\n  owner: 'admin',\n  createdAt: '2024-01-01T00:00:00Z'\n};\n\nconst mockTestCases = [\n  {\n    id: '81',\n    name: 'Test Case 1',\n    title: 'Test Case 1',\n    description: 'Test description 1',\n    status: 'Inactive' as const,\n    priority: 'High' as const,\n    steps: ['Step 1', 'Step 2'],\n    expected: 'Expected result 1',\n    lastUpdated: '2024-01-01T00:00:00Z',\n    tags: ['test'],\n    createdBy: 'admin',\n    createdAt: '2024-01-01T00:00:00Z',\n    updatedAt: '2024-01-01T00:00:00Z'\n  }\n];\n\n// Mock callbacks\nconst mockOnTestCaseUpdate = jest.fn();\nconst mockOnBulkUpdate = jest.fn();\nconst mockOnAddTestCases = jest.fn();\nconst mockOnTestCasesLoad = jest.fn();\n\n// Mock API hooks\njest.mock('../src/renderer/services/api', () => ({\n  api: {\n    reducerPath: 'api',\n    reducer: (state = {}, action: any) => state,\n    middleware: () => (next: any) => (action: any) => next(action),\n  },\n  useGetReleaseTestCasesQuery: jest.fn(),\n  useUpdateReleaseExecutionStatsMutation: jest.fn(),\n  useGetReleaseExecutionStatsQuery: jest.fn(),\n  useUpdateTestCaseStatusMutation: jest.fn(),\n  useGetTestFoldersQuery: jest.fn(),\n  useGetImportedFoldersQuery: jest.fn(),\n  useAddImportedFoldersMutation: jest.fn(),\n  useRemoveImportedFolderMutation: jest.fn(),\n}));\n\nimport {\n  useGetReleaseTestCasesQuery,\n  useUpdateReleaseExecutionStatsMutation,\n  useGetReleaseExecutionStatsQuery,\n  useUpdateTestCaseStatusMutation,\n  useGetTestFoldersQuery,\n  useGetImportedFoldersQuery,\n  useAddImportedFoldersMutation,\n  useRemoveImportedFolderMutation,\n} from '../src/renderer/services/api';\n\ndescribe('ExecutionView Component', () => {\n  let mockStore: ReturnType<typeof createMockStore>;\n\n  beforeEach(() => {\n    mockStore = createMockStore();\n    \n    // Reset all mocks\n    jest.clearAllMocks();\n    \n    // Setup default mock implementations\n    (useGetReleaseTestCasesQuery as jest.Mock).mockReturnValue({\n      data: mockApiTestCases,\n      isLoading: false,\n      error: null,\n      refetch: jest.fn(),\n    });\n\n    (useGetReleaseExecutionStatsQuery as jest.Mock).mockReturnValue({\n      data: mockExecutionStats,\n      isLoading: false,\n      error: null,\n      refetch: jest.fn(),\n    });\n\n    (useUpdateTestCaseStatusMutation as jest.Mock).mockReturnValue([\n      jest.fn().mockResolvedValue({ data: { success: true } }),\n    ]);\n\n    (useUpdateReleaseExecutionStatsMutation as jest.Mock).mockReturnValue([\n      jest.fn().mockResolvedValue({ data: { success: true } }),\n    ]);\n\n    (useGetTestFoldersQuery as jest.Mock).mockReturnValue({\n      data: [],\n    });\n\n    (useGetImportedFoldersQuery as jest.Mock).mockReturnValue({\n      data: [],\n      refetch: jest.fn(),\n    });\n\n    (useAddImportedFoldersMutation as jest.Mock).mockReturnValue([\n      jest.fn().mockResolvedValue({ data: { success: true } }),\n    ]);\n\n    (useRemoveImportedFolderMutation as jest.Mock).mockReturnValue([\n      jest.fn().mockResolvedValue({ data: { success: true } }),\n    ]);\n  });\n\n  const renderExecutionView = () => {\n    return render(\n      <Provider store={mockStore}>\n        <ExecutionView\n          release={mockRelease}\n          testCases={mockTestCases}\n          onTestCaseUpdate={mockOnTestCaseUpdate}\n          onBulkUpdate={mockOnBulkUpdate}\n          onAddTestCases={mockOnAddTestCases}\n          onTestCasesLoad={mockOnTestCasesLoad}\n        />\n      </Provider>\n    );\n  };\n\n  describe('기본 렌더링', () => {\n    it('컴포넌트가 정상적으로 렌더링되어야 한다', () => {\n      renderExecutionView();\n      \n      expect(screen.getByText('Test Case 1')).toBeInTheDocument();\n      expect(screen.getByText('Test Case 2')).toBeInTheDocument();\n    });\n\n    it('API 데이터가 우선적으로 표시되어야 한다', () => {\n      renderExecutionView();\n      \n      // API 데이터의 테스트케이스들이 표시되어야 함\n      expect(screen.getByText('Test Case 1')).toBeInTheDocument();\n      expect(screen.getByText('Test Case 2')).toBeInTheDocument();\n    });\n\n    it('로딩 상태가 표시되어야 한다', () => {\n      (useGetReleaseTestCasesQuery as jest.Mock).mockReturnValue({\n        data: undefined,\n        isLoading: true,\n        error: null,\n        refetch: jest.fn(),\n      });\n\n      renderExecutionView();\n      \n      // 로딩 인디케이터가 표시되어야 함 (실제 구현에 따라 조정 필요)\n      expect(screen.getByText('Test Case 1')).toBeInTheDocument(); // fallback to props\n    });\n  });\n\n  describe('드롭다운 상태 변경', () => {\n    it('드롭다운을 클릭하면 메뉴가 열려야 한다', async () => {\n      renderExecutionView();\n      \n      // 첫 번째 테스트케이스의 드롭다운 버튼 찾기\n      const dropdownButtons = screen.getAllByText(/Inactive|Pass|Fail|Block|Skip/);\n      const firstDropdownButton = dropdownButtons[0];\n      \n      fireEvent.click(firstDropdownButton);\n      \n      // 드롭다운 메뉴가 표시되어야 함\n      await waitFor(() => {\n        expect(screen.getByText('Pass')).toBeInTheDocument();\n        expect(screen.getByText('Fail')).toBeInTheDocument();\n        expect(screen.getByText('Block')).toBeInTheDocument();\n        expect(screen.getByText('Skip')).toBeInTheDocument();\n      });\n    });\n\n    it('상태를 선택하면 API가 호출되어야 한다', async () => {\n      const mockUpdateStatus = jest.fn().mockResolvedValue({ \n        data: { success: true, message: '상태가 업데이트되었습니다.' } \n      });\n      \n      (useUpdateTestCaseStatusMutation as jest.Mock).mockReturnValue([\n        mockUpdateStatus,\n      ]);\n\n      renderExecutionView();\n      \n      // 드롭다운 열기\n      const dropdownButtons = screen.getAllByText(/Inactive|Pass|Fail|Block|Skip/);\n      const firstDropdownButton = dropdownButtons[0];\n      fireEvent.click(firstDropdownButton);\n      \n      // Pass 상태 선택\n      await waitFor(() => {\n        const passOption = screen.getByText('Pass');\n        fireEvent.click(passOption);\n      });\n      \n      // API 호출 확인\n      await waitFor(() => {\n        expect(mockUpdateStatus).toHaveBeenCalledWith({\n          releaseId: 'test-release-id',\n          testCaseId: '81',\n          status: 'Pass',\n          comment: undefined\n        });\n      });\n    });\n\n    it('상태 변경 시 부모 컴포넌트 콜백이 호출되어야 한다', async () => {\n      renderExecutionView();\n      \n      // 드롭다운 열기\n      const dropdownButtons = screen.getAllByText(/Inactive|Pass|Fail|Block|Skip/);\n      const firstDropdownButton = dropdownButtons[0];\n      fireEvent.click(firstDropdownButton);\n      \n      // Pass 상태 선택\n      await waitFor(() => {\n        const passOption = screen.getByText('Pass');\n        fireEvent.click(passOption);\n      });\n      \n      // 부모 콜백 호출 확인\n      await waitFor(() => {\n        expect(mockOnTestCaseUpdate).toHaveBeenCalledWith('81', {\n          status: 'Pass',\n          lastUpdated: expect.any(String)\n        });\n      });\n    });\n  });\n\n  describe('실시간 동기화', () => {\n    it('API 폴링이 2초마다 실행되어야 한다', () => {\n      const mockRefetch = jest.fn();\n      \n      (useGetReleaseTestCasesQuery as jest.Mock).mockReturnValue({\n        data: mockApiTestCases,\n        isLoading: false,\n        error: null,\n        refetch: mockRefetch,\n      });\n\n      renderExecutionView();\n      \n      // 폴링 설정 확인 (실제로는 RTK Query가 내부적으로 처리)\n      expect(useGetReleaseTestCasesQuery).toHaveBeenCalledWith('test-release-id', {\n        pollingInterval: 2000,\n        refetchOnMountOrArgChange: true,\n        refetchOnFocus: true,\n      });\n    });\n\n    it('API 데이터가 변경되면 UI가 업데이트되어야 한다', async () => {\n      const { rerender } = renderExecutionView();\n      \n      // 초기 상태 확인\n      expect(screen.getByText('Test Case 1')).toBeInTheDocument();\n      expect(screen.getByText('Inactive')).toBeInTheDocument();\n      \n      // API 데이터 변경 시뮬레이션\n      const updatedApiTestCases = {\n        data: [\n          {\n            ...mockApiTestCases.data[0],\n            status: 'Pass'\n          },\n          ...mockApiTestCases.data.slice(1)\n        ]\n      };\n      \n      (useGetReleaseTestCasesQuery as jest.Mock).mockReturnValue({\n        data: updatedApiTestCases,\n        isLoading: false,\n        error: null,\n        refetch: jest.fn(),\n      });\n      \n      // 컴포넌트 재렌더링\n      rerender(\n        <Provider store={mockStore}>\n          <ExecutionView\n            release={mockRelease}\n            testCases={mockTestCases}\n            onTestCaseUpdate={mockOnTestCaseUpdate}\n            onBulkUpdate={mockOnBulkUpdate}\n            onAddTestCases={mockOnAddTestCases}\n            onTestCasesLoad={mockOnTestCasesLoad}\n          />\n        </Provider>\n      );\n      \n      // 상태가 업데이트되었는지 확인\n      await waitFor(() => {\n        expect(screen.getByText('Pass')).toBeInTheDocument();\n      });\n    });\n  });\n\n  describe('에러 처리', () => {\n    it('API 에러 시 적절한 에러 처리가 되어야 한다', async () => {\n      const mockUpdateStatus = jest.fn().mockRejectedValue(new Error('API Error'));\n      \n      (useUpdateTestCaseStatusMutation as jest.Mock).mockReturnValue([\n        mockUpdateStatus,\n      ]);\n\n      // alert 모킹\n      const mockAlert = jest.spyOn(window, 'alert').mockImplementation(() => {});\n\n      renderExecutionView();\n      \n      // 드롭다운 열기\n      const dropdownButtons = screen.getAllByText(/Inactive|Pass|Fail|Block|Skip/);\n      const firstDropdownButton = dropdownButtons[0];\n      fireEvent.click(firstDropdownButton);\n      \n      // Pass 상태 선택\n      await waitFor(() => {\n        const passOption = screen.getByText('Pass');\n        fireEvent.click(passOption);\n      });\n      \n      // 에러 메시지 표시 확인\n      await waitFor(() => {\n        expect(mockAlert).toHaveBeenCalledWith('상태 변경에 실패했습니다: Error: API Error');\n      });\n      \n      mockAlert.mockRestore();\n    });\n\n    it('API 로딩 실패 시 fallback 데이터가 표시되어야 한다', () => {\n      (useGetReleaseTestCasesQuery as jest.Mock).mockReturnValue({\n        data: undefined,\n        isLoading: false,\n        error: { message: 'API Error' },\n        refetch: jest.fn(),\n      });\n\n      renderExecutionView();\n      \n      // props의 테스트케이스가 fallback으로 표시되어야 함\n      expect(screen.getByText('Test Case 1')).toBeInTheDocument();\n    });\n  });\n\n  describe('데이터 필터링', () => {\n    it('상태별 필터링이 작동해야 한다', () => {\n      renderExecutionView();\n      \n      // 필터 입력 찾기 (실제 구현에 따라 조정 필요)\n      const statusFilter = screen.getByPlaceholderText('상태로 필터링') || screen.getByText('상태');\n      \n      if (statusFilter) {\n        fireEvent.change(statusFilter, { target: { value: 'Pass' } });\n        \n        // Pass 상태인 테스트케이스만 표시되어야 함\n        expect(screen.getByText('Test Case 2')).toBeInTheDocument();\n        expect(screen.queryByText('Test Case 1')).not.toBeInTheDocument();\n      }\n    });\n  });\n\n  describe('테스트케이스 선택', () => {\n    it('테스트케이스를 클릭하면 상세 패널이 열려야 한다', async () => {\n      renderExecutionView();\n      \n      // 테스트케이스 행 클릭\n      const testCaseRow = screen.getByText('Test Case 1').closest('tr');\n      if (testCaseRow) {\n        fireEvent.click(testCaseRow);\n      }\n      \n      // 상세 패널이 표시되어야 함\n      await waitFor(() => {\n        expect(screen.getByText('Test Case Details')).toBeInTheDocument();\n        expect(screen.getByText('Test Case 1')).toBeInTheDocument();\n      });\n    });\n  });\n\n  describe('일괄 작업', () => {\n    it('여러 테스트케이스를 선택할 수 있어야 한다', () => {\n      renderExecutionView();\n      \n      // 체크박스 찾기 (실제 구현에 따라 조정 필요)\n      const checkboxes = screen.getAllByRole('checkbox');\n      \n      if (checkboxes.length > 0) {\n        // 첫 번째 테스트케이스 선택\n        fireEvent.click(checkboxes[0]);\n        \n        // 선택된 상태 확인 (실제 구현에 따라 조정 필요)\n        expect(checkboxes[0]).toBeChecked();\n      }\n    });\n  });\n});\n"],"version":3}