{"file":"/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/src/main/app/domains/folders/routes/folderRoutes.ts","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAAiC;AACjC,kFAAoE;AAEpE;;;;;;;;;;;;;;;;;;GAkBG;AAEH,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,WAAW;AACX,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,gBAAgB,CAAC,aAAa,CAAC,CAAC;AAEpD;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AACH,cAAc;AACd,MAAM,CAAC,GAAG,CAAC,qBAAqB,EAAE,gBAAgB,CAAC,oBAAoB,CAAC,CAAC;AAEzE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAwCG;AACH,QAAQ;AACR,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,gBAAgB,CAAC,YAAY,CAAC,CAAC;AAEhD;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AACH,WAAW;AACX,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,gBAAgB,CAAC,aAAa,CAAC,CAAC;AAEnD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyCG;AACH,QAAQ;AACR,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,gBAAgB,CAAC,YAAY,CAAC,CAAC;AAEpD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAqCG;AACH,QAAQ;AACR,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,gBAAgB,CAAC,UAAU,CAAC,CAAC;AAEvD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyCG;AACH,qBAAqB;AACrB,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,gBAAgB,CAAC,eAAe,CAAC,CAAC;AAE9D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAqCG;AACH,QAAQ;AACR,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,gBAAgB,CAAC,YAAY,CAAC,CAAC;AAErD,kBAAe,MAAM,CAAC","names":[],"sources":["/Users/3i-a1-2021-017/Documents/quest/Desktop/quest/src/main/app/domains/folders/routes/folderRoutes.ts"],"sourcesContent":["import { Router } from 'express';\nimport * as folderController from '../controllers/folderController';\n\n/**\n * @swagger\n * /api/folders/tree:\n *   get:\n *     summary: 폴더 트리 조회\n *     description: 전체 폴더 트리 구조를 조회합니다.\n *     tags: [Folders]\n *     responses:\n *       200:\n *         description: 폴더 트리 조회 성공\n *         content:\n *           application/json:\n *             schema:\n *               type: array\n *               items:\n *                 $ref: '#/components/schemas/Folder'\n *       500:\n *         description: 서버 오류\n */\n\nconst router = Router();\n\n// 폴더 트리 조회\nrouter.get('/tree', folderController.getFolderTree);\n\n/**\n * @swagger\n * /api/folders/project/{projectId}:\n *   get:\n *     summary: 프로젝트별 폴더 목록\n *     description: 특정 프로젝트의 폴더 목록을 조회합니다.\n *     tags: [Folders]\n *     parameters:\n *       - in: path\n *         name: projectId\n *         required: true\n *         schema:\n *           type: string\n *         description: 프로젝트 ID\n *     responses:\n *       200:\n *         description: 프로젝트 폴더 목록 조회 성공\n *         content:\n *           application/json:\n *             schema:\n *               type: array\n *               items:\n *                 $ref: '#/components/schemas/Folder'\n *       500:\n *         description: 서버 오류\n */\n// 프로젝트별 폴더 목록\nrouter.get('/project/:projectId', folderController.listFoldersByProject);\n\n/**\n * @swagger\n * /api/folders:\n *   post:\n *     summary: 폴더 생성\n *     description: 새로운 폴더를 생성합니다.\n *     tags: [Folders]\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             required:\n *               - name\n *               - projectId\n *             properties:\n *               name:\n *                 type: string\n *                 description: 폴더 이름\n *               description:\n *                 type: string\n *                 description: 폴더 설명\n *               parentId:\n *                 type: integer\n *                 description: 부모 폴더 ID\n *               projectId:\n *                 type: string\n *                 description: 프로젝트 ID\n *     responses:\n *       201:\n *         description: 폴더 생성 성공\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Folder'\n *       400:\n *         description: 잘못된 요청\n *       500:\n *         description: 서버 오류\n */\n// 폴더 생성\nrouter.post('/', folderController.createFolder);\n\n/**\n * @swagger\n * /api/folders/{id}:\n *   get:\n *     summary: 특정 폴더 조회\n *     description: ID로 특정 폴더를 조회합니다.\n *     tags: [Folders]\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: integer\n *         description: 폴더 ID\n *     responses:\n *       200:\n *         description: 폴더 조회 성공\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Folder'\n *       404:\n *         description: 폴더를 찾을 수 없음\n *       500:\n *         description: 서버 오류\n */\n// 특정 폴더 조회\nrouter.get('/:id', folderController.getFolderById);\n\n/**\n * @swagger\n * /api/folders/{id}:\n *   patch:\n *     summary: 폴더 수정\n *     description: 특정 폴더를 수정합니다.\n *     tags: [Folders]\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: integer\n *         description: 폴더 ID\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               name:\n *                 type: string\n *                 description: 폴더 이름\n *               description:\n *                 type: string\n *                 description: 폴더 설명\n *               sortOrder:\n *                 type: integer\n *                 description: 정렬 순서\n *     responses:\n *       200:\n *         description: 폴더 수정 성공\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Folder'\n *       404:\n *         description: 폴더를 찾을 수 없음\n *       500:\n *         description: 서버 오류\n */\n// 폴더 수정\nrouter.patch('/:id', folderController.updateFolder);\n\n/**\n * @swagger\n * /api/folders/{id}/move:\n *   patch:\n *     summary: 폴더 이동\n *     description: 특정 폴더를 다른 위치로 이동합니다.\n *     tags: [Folders]\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: integer\n *         description: 폴더 ID\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             required:\n *               - newParentId\n *             properties:\n *               newParentId:\n *                 type: integer\n *                 description: 새로운 부모 폴더 ID\n *     responses:\n *       200:\n *         description: 폴더 이동 성공\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Folder'\n *       404:\n *         description: 폴더를 찾을 수 없음\n *       500:\n *         description: 서버 오류\n */\n// 폴더 이동\nrouter.patch('/:id/move', folderController.moveFolder);\n\n/**\n * @swagger\n * /api/folders/move-batch:\n *   patch:\n *     summary: 폴더 배치 이동\n *     description: 여러 폴더를 한 번에 이동합니다.\n *     tags: [Folders]\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             required:\n *               - folderIds\n *               - newParentId\n *             properties:\n *               folderIds:\n *                 type: array\n *                 items:\n *                   type: integer\n *                 description: 이동할 폴더 ID 목록\n *               newParentId:\n *                 type: integer\n *                 description: 새로운 부모 폴더 ID\n *     responses:\n *       200:\n *         description: 폴더 배치 이동 성공\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 message:\n *                   type: string\n *       400:\n *         description: 잘못된 요청\n *       500:\n *         description: 서버 오류\n */\n// 폴더 배치 이동 (8.13 스펙)\nrouter.patch('/move-batch', folderController.moveFolderBatch);\n\n/**\n * @swagger\n * /api/folders/{id}:\n *   delete:\n *     summary: 폴더 삭제\n *     description: 특정 폴더를 삭제합니다.\n *     tags: [Folders]\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: integer\n *         description: 폴더 ID\n *       - in: query\n *         name: mode\n *         schema:\n *           type: string\n *           enum: [soft, hard]\n *           default: soft\n *         description: '삭제 모드 (soft: 논리 삭제, hard: 물리 삭제)'\n *     responses:\n *       200:\n *         description: 폴더 삭제 성공\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 message:\n *                   type: string\n *       404:\n *         description: 폴더를 찾을 수 없음\n *       500:\n *         description: 서버 오류\n */\n// 폴더 삭제\nrouter.delete('/:id', folderController.deleteFolder);\n\nexport default router;\n"],"version":3}